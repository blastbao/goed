// Code generated by go-bindata.
// sources:
// res/Readme.md
// res/actions/Readme.md
// res/default/actions/find_files.sh
// res/default/actions/goed.fish
// res/default/actions/goed.rc
// res/default/actions/goed.sh
// res/default/actions/goed_helper.ank
// res/default/actions/goimports.sh
// res/default/actions/search.ank
// res/default/actions/search_text.sh
// res/default/actions/stats.sh
// res/default/actions/vt100_size.sh
// res/default/bindings.toml
// res/default/config.toml
// res/default/themes/acme.toml
// res/default/themes/default.toml
// res/resources_version.txt
// res/themes/Readme.md
// DO NOT EDIT!

package core

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _resReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\x31\x6f\x1b\x31\x0c\x85\xf7\xfb\x15\xaf\x5b\x02\xb8\xf6\x9e\xad\xa8\x33\x04\x28\xe2\x02\x4e\x76\xd3\x12\x75\x16\x7a\x27\x1e\x28\x5e\x93\x76\xe8\x6f\x2f\xa4\xea\xe2\xd8\x68\xbb\x92\x7c\x4f\x8f\x1f\xf5\x59\x92\x71\xb2\x0c\x09\xf8\xb5\x59\xf7\xc2\x1e\x77\x1d\xf0\x11\x4e\x52\x88\xfd\xda\x64\x1c\x70\x87\xe7\xcc\x8a\x1b\x37\x67\x93\x31\xfe\x64\x7f\xdb\xfa\xb3\x92\x45\x49\x08\x71\xe0\x2a\xb3\x13\x8f\x9c\x37\x7f\x95\xfc\xe9\xad\xe0\x94\xc9\x18\x41\x65\x44\x76\x4a\xe6\x4e\x10\x85\x93\x29\xb2\x6f\x65\xa3\xe4\x49\xfd\xa6\xf9\x55\x6f\x72\xe5\xad\x7f\x98\xb7\x66\x57\x27\x3d\x07\x9a\x07\x2b\x93\x3b\x8d\x7d\x4c\x34\xa0\xee\x56\x72\xe6\x15\xbc\x20\x89\x81\x7d\x34\xf8\xa8\xec\x6c\xf8\x01\xca\x78\x89\xc3\x80\x23\x43\x79\x1a\xc8\xb1\xc7\x3c\x49\xc2\x3c\xf5\x4a\x9e\xf3\xfa\xc2\xfb\x12\xd0\xbe\x05\x5e\xb8\x61\x7b\x7e\xe2\x52\x77\x26\xb4\x2c\xd9\xc0\xfc\x47\xf3\x6e\xf3\x37\x51\xab\x5d\xa9\xaa\xec\x38\x87\xc0\x9a\x37\x25\x4c\x39\x2f\x94\x5e\x96\x22\x3c\x19\xad\xb0\xdd\xe1\x71\xf7\x84\xfb\xed\xc3\x13\x3e\x54\x51\x4c\xc5\xda\x71\x93\x51\x4c\xb9\x04\x83\x9b\x55\x8b\x47\xe5\xb7\x0c\xdd\xe4\x5b\x7c\xfa\xfa\x80\x2c\xee\x1b\x5b\x21\xd3\xbd\x11\xa8\x8c\x41\xca\x98\x33\x7b\x3c\x3f\x7e\xb9\xdf\xef\x41\x38\x5f\x0b\xdf\x59\x73\xf9\x36\xfc\x1a\xb3\xe5\x55\x97\x05\x41\x14\xfc\x4a\xe3\x34\x30\x62\xc0\x51\xec\x84\xc3\xb2\x77\x2f\x61\xb4\x8a\xfa\x00\x4a\x1e\x87\x6b\x30\xef\x07\x9a\xe9\xa2\xbe\xe8\x2d\x07\x2e\xc9\xd6\xdd\xef\x00\x00\x00\xff\xff\x4d\x01\x5a\xb0\xfe\x02\x00\x00")

func resReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_resReadmeMd,
		"res/Readme.md",
	)
}

func resReadmeMd() (*asset, error) {
	bytes, err := resReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/Readme.md", size: 766, mode: os.FileMode(420), modTime: time.Unix(1509992901, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resActionsReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x2e\x2d\x2e\xc9\xcf\x55\x48\x4c\x2e\xc9\xcc\xcf\x2b\x56\x48\xcf\x57\xc8\x48\x2d\x4a\xe5\x02\x04\x00\x00\xff\xff\xc4\x35\xc4\xb2\x17\x00\x00\x00")

func resActionsReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_resActionsReadmeMd,
		"res/actions/Readme.md",
	)
}

func resActionsReadmeMd() (*asset, error) {
	bytes, err := resActionsReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/actions/Readme.md", size: 23, mode: os.FileMode(420), modTime: time.Unix(1509992901, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resDefaultActionsFind_filesSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8e\x3d\x6e\x84\x30\x14\x84\xeb\xbc\x53\x4c\x1e\x2e\x12\x24\x82\x48\x99\xbf\x4b\x50\x22\x84\x6c\x62\x63\x4b\xac\x17\xe1\xb7\x12\xdc\x7e\x65\x68\x76\xdb\xd1\xcc\x7c\x5f\xf1\x5a\x9b\x10\x6b\xa3\x93\x27\x2a\xd0\x5a\xbd\x8e\x1e\x2e\xcc\x36\xc1\xec\x88\xfa\x62\xb1\x68\x11\xbb\x46\xbc\xb9\x10\xff\xdf\x89\x82\x43\x07\x56\x05\xa3\x9a\x05\x0d\xfa\x6f\x88\xb7\x91\x00\xc0\x8e\xfe\x0a\x6e\xf7\x28\x7a\xfb\x82\xc3\x4f\xbe\x1a\xf2\xcd\x90\x6e\x26\xc9\x1a\xe2\xf4\x87\x6e\xd1\xe2\x7b\x3e\x17\x5b\x10\x34\xe4\x02\x51\x4e\x7f\xf9\x83\x9f\x10\xd3\x23\xe2\xe5\xac\xa8\x4f\x3e\x06\x59\x08\x2a\x67\xa8\x0e\x55\x2e\x55\x53\xf2\x3d\x00\x00\xff\xff\xea\x65\xf8\x2e\xd5\x00\x00\x00")

func resDefaultActionsFind_filesShBytes() ([]byte, error) {
	return bindataRead(
		_resDefaultActionsFind_filesSh,
		"res/default/actions/find_files.sh",
	)
}

func resDefaultActionsFind_filesSh() (*asset, error) {
	bytes, err := resDefaultActionsFind_filesShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/default/actions/find_files.sh", size: 213, mode: os.FileMode(493), modTime: time.Unix(1509992901, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resDefaultActionsGoedFish = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x91\xcd\xae\xda\x30\x10\x85\xd7\xf8\x29\x46\x0e\x0b\x90\x0a\x81\x07\xc8\x02\x95\x08\x58\x14\xaa\x82\xda\x45\x85\x2c\xd7\x3f\x64\xd4\x5c\x1b\xc5\x13\x02\x3c\xfd\x55\x7e\xd0\x4d\xd8\x9e\x33\xf3\xcd\xf1\x71\x04\x1b\x6f\x34\x4c\x2c\x4e\x43\x36\x79\x4c\x01\x1d\x12\x63\xc1\x10\xcc\xee\xb0\x39\xa4\x6b\xb1\xdb\x1f\x4f\xab\xfd\xf7\x14\xc6\xb2\xb8\x84\xbf\x8b\xf3\xc0\xfd\xbd\x4b\xff\x74\xce\xf2\xcc\x58\x04\x47\x23\x0b\x95\xc1\xa5\xc6\xaa\x32\x90\xff\x88\xff\x95\x98\x13\x3a\x20\xef\xf3\x00\x16\x8b\x40\xf0\x82\xfc\x5c\x9d\xb6\x30\xde\x1e\x7e\xa4\xf1\xbc\xde\x89\xa5\x22\xf4\x2e\xc4\x03\x51\x1b\x2b\xcb\x9c\x7a\x66\xbd\xc7\x98\x2d\x5d\xa3\x34\xe7\x84\xd2\x6c\x14\x81\xd2\x80\x8e\x3c\x48\xd0\x58\x18\x45\xbe\x78\x7c\x03\xe9\x34\x38\x4f\x68\x1f\x6d\x32\x6f\x81\x32\x03\xce\x54\xf5\x14\x1b\xbd\x22\x2a\xdd\x3c\xe6\xc6\x46\xcd\xd8\x6c\x26\xaf\x08\x37\x34\x95\x08\x86\x44\xe5\x8b\xff\x42\x63\x01\xe3\xb7\x66\xbe\xaa\xe0\x93\x6b\xa5\xa7\x9c\x19\xa7\xa1\x97\xcf\x0f\x80\xfe\x6a\xdc\x3b\xa3\x5b\x6c\xcf\xd7\x2d\xb7\x84\xae\xa6\x74\xbd\x3b\x1d\x7e\x01\xef\x41\x8c\x46\x7a\x87\x74\x8c\xa8\x35\x25\x58\xcc\x0d\x63\x32\x47\x19\x40\xe9\x84\x77\x35\xf1\x97\x16\x12\x1e\x9a\xff\x12\x64\xee\x34\x0f\x19\xef\x0c\x9b\x70\x8b\x4e\x8b\x1a\x10\x7a\x7a\x78\x26\xfc\x46\xcb\xc5\x42\x04\x7c\x9a\xc6\x60\xf3\x78\xa0\xb0\xcf\x00\x00\x00\xff\xff\xf1\x60\x7e\x7d\x54\x02\x00\x00")

func resDefaultActionsGoedFishBytes() ([]byte, error) {
	return bindataRead(
		_resDefaultActionsGoedFish,
		"res/default/actions/goed.fish",
	)
}

func resDefaultActionsGoedFish() (*asset, error) {
	bytes, err := resDefaultActionsGoedFishBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/default/actions/goed.fish", size: 596, mode: os.FileMode(493), modTime: time.Unix(1509992901, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resDefaultActionsGoedRc = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x52\xb1\x6e\xdb\x30\x14\x9c\xcd\xaf\x38\xc0\x9c\x82\xc4\x8a\x3b\x16\xf0\x10\x34\x42\xe2\xa1\x71\xd1\x18\xcd\xa8\x32\xe4\x63\xf5\x50\x95\x34\xc4\x67\xab\x89\xe0\x7f\x2f\x28\xb9\x75\x94\xa5\x1b\xf1\xee\xde\xdd\xe9\x9e\xe6\xb8\x8b\xe4\xd0\x5a\x70\x60\x51\xea\x6e\x53\xde\x56\xeb\x87\xc7\xed\xcd\xc3\xa7\x72\xa5\x97\xe3\xe0\xdb\xba\x7c\x5a\xe9\x0f\x4a\xcd\xf1\x48\xa6\xb5\x35\x7e\xe4\x2d\xbb\x4f\x12\x7f\x15\xcf\x7b\x6e\x84\x03\x24\xc6\x26\xc1\x73\x9b\x04\xea\xcb\xcd\xf6\x7e\xa5\xef\x37\x9f\xcb\x62\x91\xc9\x85\xb1\xc2\x31\xa4\xe2\xe3\xdb\xa1\x23\x6f\xf6\x8d\xbc\x01\xf3\x9e\x52\x3e\x0c\x0e\x55\xdc\x51\x40\xaf\x66\x73\x0c\x2f\x03\xcf\x0d\x81\x47\x54\xcd\x86\x14\x57\x57\x66\xc7\x23\xae\x27\xf1\xf1\xbd\xdf\x75\xee\x08\xbd\x54\xc7\xb3\x24\x39\x96\x51\x72\x78\x4d\x25\x61\x82\x43\x67\x58\xe0\x63\x0b\x16\x48\xc4\x33\x21\x99\x03\x39\x14\xb0\x4d\x4c\xef\x7c\x07\x91\xff\xf8\x5a\x37\x1a\x5a\x07\x0e\x12\x61\xe0\xb8\x25\x2b\xb1\x7d\xb9\x1c\x1c\x43\x14\xf6\x2f\x63\x82\xe8\x21\x35\x21\x50\x97\x59\x6a\xf6\xb7\x5d\xeb\xa0\x2f\x26\xd6\x07\xa6\xae\x4a\x24\x55\x17\xdb\xea\xa7\xe3\xf6\x7d\x0e\xfd\xef\x78\xa7\x48\xea\x08\xa5\xca\xdb\xf5\x76\xf3\x75\x75\x2e\x63\x8e\xa7\x9a\x02\x3a\x96\xfa\x54\xc3\x25\xf4\xc8\x02\xa7\xb1\xea\xfc\x19\x11\xfd\xf9\x28\xfa\xe2\x88\xc9\x55\x8a\x9c\xd6\x07\x24\xf4\x69\xf8\x47\x2a\xa1\xdf\xb2\x48\x75\xa6\x66\xc0\xa3\xf7\x1c\x5c\x95\xc9\xe9\x34\xc7\xb0\xf1\x8a\xfe\x20\xcb\xeb\xeb\x2a\xf1\x2b\x2d\x52\x9d\x53\x4e\x06\x4a\xfd\x09\x00\x00\xff\xff\x8a\xdb\xb8\xe1\xa8\x02\x00\x00")

func resDefaultActionsGoedRcBytes() ([]byte, error) {
	return bindataRead(
		_resDefaultActionsGoedRc,
		"res/default/actions/goed.rc",
	)
}

func resDefaultActionsGoedRc() (*asset, error) {
	bytes, err := resDefaultActionsGoedRcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/default/actions/goed.rc", size: 680, mode: os.FileMode(420), modTime: time.Unix(1509992901, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resDefaultActionsGoedSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x91\x4f\xaf\xda\x30\x10\xc4\xcf\xf8\x53\xac\x9c\x1c\x5a\xa9\xef\xe5\xd1\x63\xa5\x48\x45\x25\x02\x0e\x85\xaa\xa0\xf6\x68\x8c\xff\x34\xab\xa6\x76\x14\x6f\x08\x50\xf5\xbb\x57\x4e\x82\x14\x38\x7a\x66\x7f\xb3\xa3\x75\x02\x2b\x6f\x34\x9c\x64\x28\x01\x1d\x12\x63\xe6\x52\xfb\x86\x60\xb5\x2b\x96\x62\xb3\xdd\x1f\x16\xdb\x2f\x45\x9e\xce\x1f\xf4\x1f\x9b\xe2\x67\x9e\x7e\x64\x2c\x81\xbd\x91\x8d\x2a\xe1\x57\x4c\x51\x6d\x20\xff\x27\x3b\xb5\x58\x11\x3a\x20\xef\xab\x00\x16\x9b\x40\x70\xc7\xbf\x2d\x0e\xeb\x3c\x5d\xef\xbe\x16\xd9\x6b\x64\x32\xa9\x08\xbd\x0b\xd9\xa7\xa9\xa8\x8d\x95\x6d\x45\x13\x33\x72\x8c\xd9\xd6\xf5\x4a\xbf\x4e\x28\xfd\xee\x3d\xfc\x65\xb3\x04\x94\x06\x74\xe4\x41\x82\xc6\xc6\x28\xf2\xcd\xf5\x03\x48\xa7\xc1\x79\x42\x7b\x1d\xda\x79\x0b\x54\x1a\x70\xa6\x8b\x53\x6c\x76\xaf\xa9\x34\xa4\x9f\xd9\xac\x9f\x79\x79\x91\x35\xc2\x19\x4d\x27\x82\x21\xd1\xf9\xe6\xb7\xd0\xd8\x40\xfa\x70\x8e\xf1\x19\xaf\x00\xfc\x58\x77\xfa\xc8\xd9\x3f\x98\xd4\xf3\x43\xb1\x49\xa4\xaf\x8d\x7b\x4e\x19\xd1\xb8\x3d\xd2\xe3\x85\x8a\xe5\xe6\xb0\xfb\x9e\xf3\x09\x6c\x34\xd2\x33\x3c\xb2\xc9\x60\x4a\xb0\x58\x19\xc6\x64\x85\x32\x80\xd2\x03\x2e\x94\xe6\x77\x2d\xe4\x3c\xf4\x5f\x25\xc8\x5c\xe8\x35\x94\x7c\x34\x6c\xce\x2d\x3a\x2d\x62\x40\x98\xe8\xe1\x96\xf3\x33\xcd\xdf\xde\x44\xc0\x9b\xe9\x0d\xf6\xf0\x66\xff\x03\x00\x00\xff\xff\xdf\x60\x48\xea\x3c\x02\x00\x00")

func resDefaultActionsGoedShBytes() ([]byte, error) {
	return bindataRead(
		_resDefaultActionsGoedSh,
		"res/default/actions/goed.sh",
	)
}

func resDefaultActionsGoedSh() (*asset, error) {
	bytes, err := resDefaultActionsGoedShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/default/actions/goed.sh", size: 572, mode: os.FileMode(420), modTime: time.Unix(1509992901, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resDefaultActionsGoed_helperAnk = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\xc1\x4a\xc4\x30\x10\x86\xcf\xc9\x53\x8c\xf5\x92\x82\x54\x7d\x80\x1e\x96\xdd\xb2\xf4\xb2\xc2\xae\xe8\x41\x44\x42\x3b\x5d\x83\xed\xa4\x4c\x92\x75\x41\xf6\xdd\x25\x6d\xac\x1e\xbd\x25\xff\x37\xf3\x4d\x26\xd7\xb0\xb5\xd8\xc2\x3b\xf6\x23\x32\x0c\xb6\x0d\x3d\x42\x67\x19\x34\x7d\x58\x70\x0d\x9b\xd1\xbb\x42\x9e\x34\x03\x9e\xb1\x81\x12\xcc\x30\x5a\xf6\x2a\xb3\xee\x36\x26\x59\x2e\x65\x6a\x9b\x4c\x5f\x52\x24\xe7\xc9\xe0\x27\xd4\x1b\x90\xa2\x0b\xd4\x4c\x57\x95\x47\x2e\x18\x7d\x60\x02\x6f\x6b\xf2\xca\xba\x62\x8b\x1e\xe9\xa4\xb2\xed\x43\xb5\x79\x7b\xaa\xab\xe7\x2c\xcf\xa5\xb8\x48\xb1\xb8\x0c\x39\xaf\xa9\x41\xa8\x37\x49\xf7\x93\xfc\x47\x59\xef\x0e\x8f\xab\xdd\xba\xfa\xab\xdd\x07\x72\xa0\xa1\xb1\xc3\xa0\xa9\xbd\x01\x3c\x1b\xaf\xee\x73\x30\x1d\x74\xda\xf4\x2e\x8d\xe1\x40\x4a\xf3\xd1\xcd\x53\x9a\xa1\x85\x72\xfa\x88\x62\x3d\x37\x4e\xf0\xe5\xee\x35\x9f\x69\xb1\xe2\xa3\x83\x12\x62\x2a\x85\x18\xd9\x90\xef\x93\x21\x55\x1c\x7c\x6b\x83\x87\x12\xac\x4b\xe7\x5f\x80\xcc\x0b\x40\x66\x29\xc4\x9c\x44\xbc\x0f\xa4\xa2\xc3\x74\x10\xc3\xab\x12\xc8\xf4\xd3\xab\x96\x31\xc8\x1c\x2b\x84\x75\x45\x35\xaf\x23\x45\xdc\xf7\x22\x2f\xf2\x3b\x00\x00\xff\xff\x98\x29\x53\x99\xe9\x01\x00\x00")

func resDefaultActionsGoed_helperAnkBytes() ([]byte, error) {
	return bindataRead(
		_resDefaultActionsGoed_helperAnk,
		"res/default/actions/goed_helper.ank",
	)
}

func resDefaultActionsGoed_helperAnk() (*asset, error) {
	bytes, err := resDefaultActionsGoed_helperAnkBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/default/actions/goed_helper.ank", size: 489, mode: os.FileMode(420), modTime: time.Unix(1509992901, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resDefaultActionsGoimportsSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8f\x41\x4b\x03\x31\x10\x85\xef\xf9\x15\x4f\x76\x8f\xae\x0b\xde\x2b\x88\x16\xe9\xa5\x82\x8a\x1e\xdb\xd9\x64\xb2\x1b\x4c\x32\x25\xc9\xb6\x08\xfd\xf1\x92\xb6\x48\xf1\xf8\xc2\x97\xf7\xbe\x69\x6e\xfa\xc1\xc5\x7e\xa0\x3c\xa9\xcc\x05\x1d\xa3\xb1\xe4\x3c\x98\x92\xff\x51\xaa\xc1\xdb\x1c\x31\x8a\x0b\x3b\x49\x25\x43\x22\x08\xa3\x20\xcb\x9c\x34\xc3\x3a\xcf\xb7\xaa\x81\x25\xef\x33\x06\xd2\xdf\x28\x82\x51\x6c\x28\x70\xf6\xea\x5f\x94\x02\xda\x93\xf3\x34\x78\xbe\x53\x6a\xef\xf8\xb0\x68\x5f\x5e\x97\xcf\x9b\xcf\xd5\xf2\x4b\xb9\x98\xcb\x25\xaf\xd6\xef\x1f\x8f\xeb\xa7\x65\x1d\x1f\xb9\x9c\x36\xe0\x45\x53\x71\x12\x55\x4e\x7a\xb1\x1d\x85\x0d\xba\x8e\x76\x0e\xb5\x68\x93\x93\xde\x78\xd1\x68\x6b\x0d\xda\xfa\xb6\x55\x3a\x98\xc5\x9f\x80\x3a\x4c\x4e\x4f\x57\x42\xf7\x0f\xe8\x0d\xef\xfb\x38\x7b\x8f\xe3\x11\x67\xda\x86\xa2\x1a\xa4\x39\xa2\x4c\x0c\x2d\x21\x50\x34\xf5\xe8\x1a\xab\x88\x6a\x75\x30\xe8\x0e\x68\x73\xd2\x15\x65\x2f\x64\x4e\x16\x18\x66\x6b\x39\xc1\x26\x09\x67\xf6\xbf\xe6\x05\xbe\xb2\x84\xfa\x0d\x00\x00\xff\xff\x23\x8f\x45\x09\x81\x01\x00\x00")

func resDefaultActionsGoimportsShBytes() ([]byte, error) {
	return bindataRead(
		_resDefaultActionsGoimportsSh,
		"res/default/actions/goimports.sh",
	)
}

func resDefaultActionsGoimportsSh() (*asset, error) {
	bytes, err := resDefaultActionsGoimportsShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/default/actions/goimports.sh", size: 385, mode: os.FileMode(493), modTime: time.Unix(1509992901, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resDefaultActionsSearchAnk = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8f\xcd\x6a\xeb\x30\x10\x85\xd7\x77\x9e\x62\xae\xb2\x91\xb8\xca\xcf\x0b\xf8\x42\x5b\x4a\xb7\xa5\x59\x06\x53\x84\x3c\x71\x44\x26\x1a\x33\xb2\x4b\x4a\xc9\xbb\x17\xb9\xb4\x4d\xbb\x11\x9c\xc3\x77\x3e\x31\x8b\xbf\x21\x1f\x05\x60\x81\xf7\xe7\x70\x1a\x98\xb0\x66\x2c\x51\xd3\x30\x7a\x8c\x93\x2a\xe5\x91\x5f\x71\xca\x53\xa1\x0e\x80\x25\x74\xd6\xf4\x42\xdd\xf3\x81\x78\x20\x5d\x85\x7c\x34\x0e\xe0\x25\x28\x4a\xf1\xb8\xe7\xd0\x7b\xa4\x33\x45\x6c\x30\x9d\x06\xd1\xd1\x1a\x29\xc6\xf9\xaf\x54\x91\xeb\x2c\x65\x5d\xf9\x6a\x59\xe0\x63\xd0\x42\x18\xb4\x2f\xb8\x9e\x65\x05\x52\x9f\x45\xe9\x2e\x14\xc2\x66\xae\x56\xb7\x22\x6c\x4d\x32\x1e\xf7\x81\x0b\x79\x34\xdf\x8c\x71\x30\x33\xb3\xc8\x3a\x60\x89\x9f\xb3\x1b\xed\x8b\x75\xbb\x4d\x0b\xb3\xbf\xc1\x9d\xe9\x95\x06\xe3\xd1\x2c\xf3\xfc\xb2\x69\x21\xed\xf1\xfa\xc7\x06\x47\x9d\x08\xdf\xe0\xcf\x3c\xfa\x57\x57\xcb\x64\x5a\xb8\x54\x92\x29\x5b\x96\xe8\xf0\x3f\x6e\x7e\x31\x6a\x3c\xb2\xc4\x16\x2e\x48\x5c\x7e\x1a\x3e\xfa\x7a\xef\xd3\x94\xb1\x50\xd0\x78\x80\x07\xa1\x6e\xa5\x53\xb6\xa3\x6c\x47\x4d\xb9\xdf\x72\x8a\x64\xeb\xc8\x39\x78\x0f\x00\x00\xff\xff\x7e\x24\xb8\x7b\xab\x01\x00\x00")

func resDefaultActionsSearchAnkBytes() ([]byte, error) {
	return bindataRead(
		_resDefaultActionsSearchAnk,
		"res/default/actions/search.ank",
	)
}

func resDefaultActionsSearchAnk() (*asset, error) {
	bytes, err := resDefaultActionsSearchAnkBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/default/actions/search.ank", size: 427, mode: os.FileMode(493), modTime: time.Unix(1509992901, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resDefaultActionsSearch_textSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xce\x3d\x6e\x84\x30\x10\xc5\xf1\x3a\x73\x8a\x97\xc1\x45\x52\x38\x88\x94\xf9\xd8\x4b\x50\x22\x0a\xc3\x1a\x3c\x12\x32\x96\x3d\x05\x7b\xfb\x95\x97\x66\xb7\x1d\xfd\xe7\xa7\xd7\xbc\xb7\x93\xc4\x76\x72\x25\x10\x35\xe8\xbd\xcb\x73\x80\xfa\x43\x91\x9c\xaa\xcf\x11\x12\xb1\xc8\xe6\x0b\x5a\x5c\x25\x17\x7c\xac\xd9\xa7\x4f\x22\x59\x30\x80\x4d\xc3\xb0\x9b\xa2\xc3\xf8\x0b\x0d\x3e\x12\x00\xf8\x39\xec\xe0\xfe\x16\xd5\x1d\x3f\x28\xf8\x4b\xae\x5a\x17\x0c\xc9\x69\x18\xf9\x8c\x0e\x51\x74\xb4\x08\x51\xbd\xfe\xf3\x17\xbf\xa8\xeb\xb3\xfa\x76\x26\xe6\x9b\x1f\x0f\x75\x03\x6c\x8e\x02\x6b\xe7\x7d\xdb\x33\xd8\x74\x0c\x53\x2b\xdc\x03\x00\x00\xff\xff\xb7\x62\x20\x19\xd5\x00\x00\x00")

func resDefaultActionsSearch_textShBytes() ([]byte, error) {
	return bindataRead(
		_resDefaultActionsSearch_textSh,
		"res/default/actions/search_text.sh",
	)
}

func resDefaultActionsSearch_textSh() (*asset, error) {
	bytes, err := resDefaultActionsSearch_textShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/default/actions/search_text.sh", size: 213, mode: os.FileMode(493), modTime: time.Unix(1509992901, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resDefaultActionsStatsSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xd4\x4f\xca\xcc\xd3\x4f\x4a\x2c\xce\xe0\x4a\x4d\xce\xc8\x57\xd0\xd5\x55\x70\x0b\x72\x75\x55\xd0\xd5\xe5\x4a\x2b\x4a\x4d\x85\x0b\xba\xb8\x81\x84\x52\xd2\x14\x74\x2b\x14\x4a\x72\x0b\xd2\x8a\xe1\x32\x21\xfe\x01\x0a\x01\x41\xfe\xce\xc1\x20\x05\x05\xc5\x0a\x89\xa5\x15\x0a\x35\x0a\xc5\xf9\x45\x25\x0a\xba\x45\xd9\x0a\xc6\x3a\xc6\x0a\x35\x0a\x19\xa9\x89\x29\x0a\xba\x79\x0a\x66\x80\x00\x00\x00\xff\xff\x85\x91\x8c\xbb\x71\x00\x00\x00")

func resDefaultActionsStatsShBytes() ([]byte, error) {
	return bindataRead(
		_resDefaultActionsStatsSh,
		"res/default/actions/stats.sh",
	)
}

func resDefaultActionsStatsSh() (*asset, error) {
	bytes, err := resDefaultActionsStatsShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/default/actions/stats.sh", size: 113, mode: os.FileMode(493), modTime: time.Unix(1509992901, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resDefaultActionsVt100_sizeSh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x90\xc1\x4e\x83\x40\x10\x86\xef\xf3\x14\xbf\x65\x0f\x9a\x48\xfa\x04\x3d\x18\x25\xa6\x97\x7a\x68\x53\x8f\xb0\xe0\x28\x9b\x20\x6b\x98\x09\x04\x9f\xde\xcc\x4a\x48\x94\x0b\x61\xbf\xfd\xfe\x3f\xb3\x93\xdd\xec\xeb\xd0\xef\x6b\x2f\x2d\x09\x2b\x72\x46\xf6\xee\x43\x07\xf6\x43\x37\x13\x65\x38\xb3\x42\x75\x86\x84\x6f\x86\x46\x7c\x7a\x6d\x5a\x7c\x44\x7e\xc3\x18\x78\xfa\xe5\xb7\x62\xca\x10\x27\xb9\x47\xfa\x6d\x62\x27\x77\x44\x66\x1c\xdc\xf3\x4b\xf1\x54\x5e\x8f\xc5\x2b\x85\x5e\x74\x39\x1f\x4f\xe7\xcb\xc3\xe9\xb1\x20\xb2\xd8\xa1\x4a\x8d\x79\xee\xbf\x42\xea\x2d\x8d\xc2\x59\x00\xce\x40\x45\xd6\xb9\xf5\x8c\xfe\xf5\xe8\xbf\x22\xac\xe5\xa8\x1b\x13\xce\x08\xad\xa3\xc3\xd9\x97\xd6\xf9\x97\x7b\xe2\xa6\x8d\xd8\xd9\x1e\xae\x97\x75\x0d\xc9\x5d\x5e\x9c\xbc\x14\xd9\xfd\x04\x00\x00\xff\xff\xcf\x77\x15\x3b\x50\x01\x00\x00")

func resDefaultActionsVt100_sizeShBytes() ([]byte, error) {
	return bindataRead(
		_resDefaultActionsVt100_sizeSh,
		"res/default/actions/vt100_size.sh",
	)
}

func resDefaultActionsVt100_sizeSh() (*asset, error) {
	bytes, err := resDefaultActionsVt100_sizeShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/default/actions/vt100_size.sh", size: 336, mode: os.FileMode(493), modTime: time.Unix(1509992901, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resDefaultBindingsToml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x94\x3f\x6f\xdb\x3c\x10\xc6\x77\x7d\x8a\x83\x3c\x26\xaf\x05\xbf\x08\x8a\xa2\x40\x27\xa7\x43\x07\x4f\x45\x67\x81\x22\xcf\x12\x6b\x8a\xa7\x90\x94\x1d\x77\xe8\x67\x2f\x74\xa4\xfe\x36\xc9\x92\x58\xbf\xe7\xd1\xf1\x1e\x1e\xc5\x1d\x9c\x44\xe7\xe1\x82\xf7\x8a\x84\x53\x45\x4b\xbd\x47\x90\x0d\x39\xe5\x21\x10\xfc\xfc\x0e\x78\x45\x1b\x7c\xb6\x83\x1f\x88\xd0\x84\xd0\xf9\x2f\x45\x51\xeb\xd0\xf4\xd5\x5e\x52\x5b\x04\x49\x46\xb8\xa2\x26\x54\x45\x65\xa8\x2a\x5a\xe1\x03\xba\x82\xdf\x8b\x7f\xcb\x70\xef\x70\x5f\x53\xb6\xcb\x76\xf0\x4d\xe9\x00\xda\xc2\x9f\x62\x1f\xdf\xd1\x56\x69\x5b\xfb\x7d\xa0\xd6\x64\x3b\xf8\x0f\x4e\xc7\x03\xf8\x20\xac\xf2\x70\x26\x07\x27\xee\xe9\x68\xb4\xbc\x40\xd5\x87\x40\x16\x0e\x50\x14\x70\x00\xed\xc1\xe0\x39\x3c\xc2\xff\xd0\x6a\xa5\x0c\x3e\xc2\x13\x38\x5d\x37\x21\xd6\x79\x7e\xa3\xce\xb3\x13\xf5\x54\x26\xd9\xc6\xf5\x96\x36\xea\x2b\xb3\x5d\x35\xcb\x4f\xc7\x43\x0e\x5f\x21\xf7\x18\x4a\xd9\x3b\x4f\x2e\x1f\xe0\x13\x43\xea\xd0\x96\xda\x96\x16\x6f\xe5\x55\xe3\x8d\xa5\xcf\xd1\x2f\x1d\x19\x53\xf6\x1d\xb3\xc3\xa7\x25\x54\x74\xb3\x03\x7e\x1e\x4b\x1b\x94\xa1\xe4\x49\x30\x3e\xae\xf8\x8d\x9c\xca\xb3\x5c\x98\xf0\x30\xbc\x58\x0a\xe7\xe8\xc6\x06\x2b\xae\x63\xad\x41\x1d\x76\x66\xa3\x0e\x28\xa9\xbc\x4b\x1b\x99\x59\xd2\xfb\x6e\x23\x72\xeb\x95\x90\x17\xdf\x09\x89\x8c\xe7\xa7\x2c\x97\xc1\x99\x07\xc1\xb8\xa1\x76\x22\xd5\xb2\x75\x61\xcc\xc8\x25\x73\x49\xdd\x7d\x24\xb1\x24\x5a\x35\x82\x86\x41\x4b\x57\x1c\xfb\x66\xfc\x6b\xc6\x63\xbf\xcc\x2f\x33\xe7\x56\x19\x9a\x19\xa6\x9d\x61\x6c\xdf\x1b\x17\xab\xb4\x52\xbd\x68\x71\x25\xbf\xb0\xfc\xd2\xeb\x69\x69\xc7\xc4\xa1\x21\x31\x75\xef\x63\x70\x71\x9d\xb6\x22\xcc\x65\x03\xba\x76\xc4\x3d\x63\x85\x06\x03\x96\xcb\xad\xbb\xb2\xd0\x0d\x1f\xd3\x88\xe2\x34\xa4\x21\x8f\xe5\x4d\x5b\x45\x53\x53\xaf\x51\xe9\xa7\x9e\xee\xa9\x27\x45\x23\xf9\xcd\xa4\xb7\x4c\xe2\x7a\x8b\xa5\x07\xb6\x3e\x4e\xcb\x5d\x1b\xc6\x32\x8f\x07\x6d\x40\x97\x9e\x87\x5f\x59\x8e\x5e\x8a\x2e\x96\x0b\x54\xd7\x06\x4b\xd9\xaa\xb2\x12\x83\xc6\x99\x16\xe7\x62\x73\x2e\x97\x03\xb6\xf8\x1a\x52\xea\x7a\x5a\xbb\x73\x9a\xdc\x4c\x79\xb8\x0e\x43\xef\xec\xaa\x85\xed\x81\x5e\x9d\x10\xdf\xe8\xf3\x3f\xdf\x4b\x3a\x95\x69\x99\x68\x19\x83\x26\x2d\xe6\x8d\xd2\x94\x23\x69\x29\x4e\x14\x37\xa1\x92\x25\xc5\x8a\x96\x29\x5c\x12\x97\x19\xa3\x63\x4e\xba\xb4\x70\xe0\x68\xd8\x66\x4c\xb6\x75\xca\xd5\x97\x9b\x1c\xb1\x46\xdf\xa1\xfb\xe0\xd2\x88\xfa\xfb\xd7\x46\xd4\x3f\xba\x38\xa2\xe3\xed\xab\x23\x88\x78\x17\x0c\xff\xb3\x7c\xe5\x99\x3e\xda\xec\x6f\x00\x00\x00\xff\xff\x02\xe9\x71\xf0\x8f\x06\x00\x00")

func resDefaultBindingsTomlBytes() ([]byte, error) {
	return bindataRead(
		_resDefaultBindingsToml,
		"res/default/bindings.toml",
	)
}

func resDefaultBindingsToml() (*asset, error) {
	bytes, err := resDefaultBindingsTomlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/default/bindings.toml", size: 1679, mode: os.FileMode(420), modTime: time.Unix(1509992901, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resDefaultConfigToml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8e\xc1\x4a\xc4\x30\x10\x40\xef\xf9\x8a\xa1\xbd\x4b\x44\x90\xf5\x90\x8b\x2e\xab\x82\x0b\x42\x8b\x9e\x43\x33\x69\x06\x9a\x99\xd2\x4e\xec\xea\xd7\x4b\x76\xe9\x6d\xde\x9b\x81\x79\x2d\x1c\x31\xfa\x32\x29\x0c\xc2\x91\x46\xd3\xfd\xb2\xfa\xcb\x1b\x8d\x69\xa2\x31\x29\xf1\xe8\x74\x29\x68\xfa\x84\x19\x5d\x13\x6e\xd7\x77\x2a\x79\x6a\xcc\xd9\x5f\x5e\x72\x78\x2e\x31\xe2\xf2\x41\x8c\xab\x7b\xb0\xd6\x9a\x16\x3a\x54\xd0\x84\x30\x7b\x4d\xa0\x02\x1e\xb2\xb0\xac\xb3\x1f\x10\xfa\xfe\x04\x51\x58\xab\x2f\x2b\x82\x87\xa1\xac\x2a\xf9\x2a\xcd\x6b\xa1\x93\xb0\xba\xa6\xd9\xc7\x8e\xfe\xd0\xdd\xdb\x1d\x8f\x33\xb9\xa7\x47\xd3\xc2\xe7\x82\xf5\x2f\x06\xc8\xc4\x94\x4b\x86\x1f\xc2\x0d\x36\x0a\x9a\xcc\x99\xf8\x8b\x70\xfb\xae\xe0\x0e\x35\x09\x65\x02\x62\x1a\xbc\xca\x62\x6a\xec\x75\xf7\xce\xe1\xa6\xdc\xc1\xfe\x07\x00\x00\xff\xff\x23\x64\x52\x8d\x0c\x01\x00\x00")

func resDefaultConfigTomlBytes() ([]byte, error) {
	return bindataRead(
		_resDefaultConfigToml,
		"res/default/config.toml",
	)
}

func resDefaultConfigToml() (*asset, error) {
	bytes, err := resDefaultConfigTomlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/default/config.toml", size: 268, mode: os.FileMode(420), modTime: time.Unix(1509992901, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resDefaultThemesAcmeToml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\xbd\xae\x9b\x30\x14\xc7\xf7\xfb\x14\xd1\x99\x19\x8e\xf9\xca\x65\xf0\x12\x03\x4b\x55\x75\x20\xed\x6e\x6e\x2c\x8a\x04\xf1\x95\xe3\x28\x8d\xd4\xa1\x5b\xa4\x6e\xfd\x5e\xd2\xa1\xaa\x54\xf5\xb9\xf2\x24\x15\x36\x26\x90\xa0\x6e\x87\x9f\x7f\xfc\x7d\xce\x91\x57\x15\x85\x2c\xc6\x00\x11\x11\x1e\xf2\xee\xeb\x11\x11\xf3\xee\x6b\x55\x15\xa2\x11\x4f\x9a\xc2\x2a\xc1\xc0\xb2\x7c\x60\xc6\x43\x24\x9d\xc7\xf6\x6a\x27\xd5\xd4\x73\xec\xea\x31\xd9\xb6\x62\xab\x29\xe4\x4b\x5c\x5a\xad\xd0\xaa\xde\x56\x14\xc2\x04\x63\x4b\x5e\x88\xe3\x41\xaa\x0d\xa1\xe0\x13\x13\x46\x06\xe6\x53\x88\xf3\x1b\x16\x50\x88\x13\xc7\x0a\xf1\xcc\x15\xd7\x52\x11\x0a\x21\x62\xd4\xdf\xe1\xa8\x4f\x21\x89\xee\x68\x40\x21\xf3\x07\x7a\x6c\x4b\xd9\x10\x0a\x8c\x61\xd8\x87\x1a\xe4\x53\x78\x4c\xa7\x28\xa0\x90\x92\x01\x69\xae\xf7\xbb\x92\xab\x05\x5d\xc0\xe5\xe7\x47\x8f\x05\x76\xa9\x43\x31\x72\xd6\xe2\x9d\xee\xbc\xeb\xaa\x27\x47\x99\x32\x29\x48\x90\xd8\x70\xd6\x6e\x46\xc9\x71\xd6\x27\x2f\x5c\xe5\x8c\xfb\xdc\x2b\x7f\xb5\x1d\x9d\x10\x78\x78\x53\x8b\x83\x0b\xfd\xf0\xe5\xa6\x5d\xf3\x6f\x6f\x4c\x42\xed\x2b\xa9\x1b\xc1\x1a\xc1\x4d\xe2\xe5\xfc\xd5\x73\xf7\x8d\x66\xed\x9c\xb4\x56\xfa\x68\x9d\x1f\x1e\x0b\xed\xcd\xe3\x7d\x3c\x29\xd9\x34\xae\x89\xef\x9f\xbc\x2c\xea\x73\x4c\x31\x72\xd6\xbc\xb4\xce\x67\x2f\x0e\x7b\xc7\x14\xc6\x79\x29\x95\xe8\xba\x2c\xea\x8d\xb0\xf3\xfc\xf1\xf2\xc8\x3e\x31\x2f\x8b\x71\x39\xd5\x5e\x3f\x1b\xe9\xf4\xeb\x7f\x52\x2a\x0f\x76\xbc\xd3\xef\x39\x6d\xcd\x4b\xf6\xb6\x6f\xfc\xf4\x77\x36\x88\xab\xaa\x36\x11\xef\xe7\x8e\x59\x23\x77\xb6\xd9\xf3\xb7\xb9\xfd\xfd\x0b\x00\x00\xff\xff\xd1\x1d\x4b\x92\x98\x03\x00\x00")

func resDefaultThemesAcmeTomlBytes() ([]byte, error) {
	return bindataRead(
		_resDefaultThemesAcmeToml,
		"res/default/themes/acme.toml",
	)
}

func resDefaultThemesAcmeToml() (*asset, error) {
	bytes, err := resDefaultThemesAcmeTomlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/default/themes/acme.toml", size: 920, mode: os.FileMode(420), modTime: time.Unix(1509992901, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resDefaultThemesDefaultToml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\xbd\x6e\xdb\x30\x10\xc7\x77\x3f\x45\x70\x33\x87\xa3\x64\xcb\xf6\xc0\x21\xa6\xc8\xa5\x08\x3a\xc8\xed\x2e\xc7\x84\x2a\x80\x36\x03\x9a\x81\x6b\xa0\x43\x37\x03\xdd\xfa\xbd\xa4\x43\x51\xa0\xe8\x73\xe5\x49\x0a\x7e\xc9\x6e\x13\x58\x13\xf5\xbf\xdf\xfd\xef\x78\xbc\x45\xc7\x40\x5c\x63\xf8\x60\x24\x3b\x06\xb5\xc4\x12\xa5\xff\x5b\x74\x8d\xd2\xea\xd6\x9d\x6b\x72\xd0\x52\x16\xf5\x1c\xbf\xb7\x3b\x63\x19\x14\x14\xab\xcc\x65\xed\xc4\x71\xb3\xd9\xa8\xad\x63\x20\xa7\x38\x8d\x58\xe3\x6c\xbf\xed\x18\x8c\xe7\x39\xf1\x85\x3a\xec\x8d\x5d\xd3\x60\xe6\x8b\xd2\x41\x2b\x18\x54\xf2\x3f\xad\x64\x50\xcd\xb3\xd6\xa8\xbb\xd6\xb6\xce\x58\xca\x60\x8c\x38\x49\x35\xb2\x5a\x30\x98\x4f\x9e\xa8\x25\x03\x51\x0c\xea\x61\xb3\x32\x9a\x32\xe0\x1c\xc7\xc9\x34\x48\x05\x83\x59\xfd\xaf\x54\x32\xa8\xe9\x20\xb9\xd6\xdd\xef\x56\xad\xbd\x62\x57\xf0\xf8\xe3\x03\x11\x0b\x9c\xfa\x7b\xfb\x43\x9a\xee\xc0\x2c\xd5\x5b\xe7\xb9\x45\x5d\x55\x79\x0e\x67\x21\x61\x83\x0b\x52\x3e\x89\xe6\x7c\xb3\xbe\xec\x1c\x81\x93\x6d\x7e\xad\x93\xfe\x72\x1b\x22\x32\x14\xa4\x30\x7a\xdd\xab\x7d\xf6\x7c\xff\x99\x88\x3a\x7b\xd6\x88\x31\x37\x11\xd9\x54\x4c\xb1\x48\x4b\xd2\x6b\xc5\xb5\x6a\x83\xe3\xe3\xc3\x17\x42\x39\x16\x3e\x87\x88\xf9\xb0\x48\xbd\x56\x75\x6f\xdd\x21\x32\xdf\xc9\x35\x22\xf5\x95\xcf\x98\xe6\xd6\x1a\xad\x73\x13\xdf\x3e\xfa\xda\xb3\xe8\xe3\x0f\x67\xcc\xb2\x5d\x45\xe6\x13\x99\xc5\xcd\x21\x38\x8b\x0d\xc3\xe8\xc6\x58\xe5\x9b\x6c\xfa\xb5\x8a\xd7\xf9\x4d\xa8\x0c\xef\x82\xe4\xb4\xda\x19\x7b\x75\x17\xa0\xe3\xcf\x4b\x50\x6d\xf6\xf1\x76\xc7\x5f\xcf\x61\xcb\x76\xc5\xdf\xa4\xbe\x8f\x7f\x88\x90\x71\x66\x9e\x48\x7d\xdf\xb4\xb6\xeb\x83\xc5\xbb\xe7\xc2\x5c\x9b\x5d\x6c\xf6\xe1\x2b\x29\xcb\xb8\xfb\x44\xf0\x1c\xff\x1b\x00\x00\xff\xff\xec\x79\x6d\x1e\x96\x03\x00\x00")

func resDefaultThemesDefaultTomlBytes() ([]byte, error) {
	return bindataRead(
		_resDefaultThemesDefaultToml,
		"res/default/themes/default.toml",
	)
}

func resDefaultThemesDefaultToml() (*asset, error) {
	bytes, err := resDefaultThemesDefaultTomlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/default/themes/default.toml", size: 918, mode: os.FileMode(420), modTime: time.Unix(1509992901, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resResources_versionTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x32\x34\x35\x34\x30\x31\x36\x31\x37\xb4\xe0\x02\x04\x00\x00\xff\xff\xfe\x1b\x42\x85\x0b\x00\x00\x00")

func resResources_versionTxtBytes() ([]byte, error) {
	return bindataRead(
		_resResources_versionTxt,
		"res/resources_version.txt",
	)
}

func resResources_versionTxt() (*asset, error) {
	bytes, err := resResources_versionTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/resources_version.txt", size: 11, mode: os.FileMode(420), modTime: time.Unix(1510434718, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resThemesReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x2e\x2d\x2e\xc9\xcf\x55\x28\xc9\x48\xcd\x4d\x2d\x56\x48\xcf\x57\xc8\x48\x2d\x4a\xe5\x02\x04\x00\x00\xff\xff\x26\x56\x89\xea\x16\x00\x00\x00")

func resThemesReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_resThemesReadmeMd,
		"res/themes/Readme.md",
	)
}

func resThemesReadmeMd() (*asset, error) {
	bytes, err := resThemesReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/themes/Readme.md", size: 22, mode: os.FileMode(420), modTime: time.Unix(1509992901, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"res/Readme.md": resReadmeMd,
	"res/actions/Readme.md": resActionsReadmeMd,
	"res/default/actions/find_files.sh": resDefaultActionsFind_filesSh,
	"res/default/actions/goed.fish": resDefaultActionsGoedFish,
	"res/default/actions/goed.rc": resDefaultActionsGoedRc,
	"res/default/actions/goed.sh": resDefaultActionsGoedSh,
	"res/default/actions/goed_helper.ank": resDefaultActionsGoed_helperAnk,
	"res/default/actions/goimports.sh": resDefaultActionsGoimportsSh,
	"res/default/actions/search.ank": resDefaultActionsSearchAnk,
	"res/default/actions/search_text.sh": resDefaultActionsSearch_textSh,
	"res/default/actions/stats.sh": resDefaultActionsStatsSh,
	"res/default/actions/vt100_size.sh": resDefaultActionsVt100_sizeSh,
	"res/default/bindings.toml": resDefaultBindingsToml,
	"res/default/config.toml": resDefaultConfigToml,
	"res/default/themes/acme.toml": resDefaultThemesAcmeToml,
	"res/default/themes/default.toml": resDefaultThemesDefaultToml,
	"res/resources_version.txt": resResources_versionTxt,
	"res/themes/Readme.md": resThemesReadmeMd,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"res": &bintree{nil, map[string]*bintree{
		"Readme.md": &bintree{resReadmeMd, map[string]*bintree{}},
		"actions": &bintree{nil, map[string]*bintree{
			"Readme.md": &bintree{resActionsReadmeMd, map[string]*bintree{}},
		}},
		"default": &bintree{nil, map[string]*bintree{
			"actions": &bintree{nil, map[string]*bintree{
				"find_files.sh": &bintree{resDefaultActionsFind_filesSh, map[string]*bintree{}},
				"goed.fish": &bintree{resDefaultActionsGoedFish, map[string]*bintree{}},
				"goed.rc": &bintree{resDefaultActionsGoedRc, map[string]*bintree{}},
				"goed.sh": &bintree{resDefaultActionsGoedSh, map[string]*bintree{}},
				"goed_helper.ank": &bintree{resDefaultActionsGoed_helperAnk, map[string]*bintree{}},
				"goimports.sh": &bintree{resDefaultActionsGoimportsSh, map[string]*bintree{}},
				"search.ank": &bintree{resDefaultActionsSearchAnk, map[string]*bintree{}},
				"search_text.sh": &bintree{resDefaultActionsSearch_textSh, map[string]*bintree{}},
				"stats.sh": &bintree{resDefaultActionsStatsSh, map[string]*bintree{}},
				"vt100_size.sh": &bintree{resDefaultActionsVt100_sizeSh, map[string]*bintree{}},
			}},
			"bindings.toml": &bintree{resDefaultBindingsToml, map[string]*bintree{}},
			"config.toml": &bintree{resDefaultConfigToml, map[string]*bintree{}},
			"themes": &bintree{nil, map[string]*bintree{
				"acme.toml": &bintree{resDefaultThemesAcmeToml, map[string]*bintree{}},
				"default.toml": &bintree{resDefaultThemesDefaultToml, map[string]*bintree{}},
			}},
		}},
		"resources_version.txt": &bintree{resResources_versionTxt, map[string]*bintree{}},
		"themes": &bintree{nil, map[string]*bintree{
			"Readme.md": &bintree{resThemesReadmeMd, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

