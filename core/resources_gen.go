// Code generated by go-bindata.
// sources:
// res/.DS_Store
// res/Readme.md
// res/actions/Readme.md
// res/default/actions/find_files.sh
// res/default/actions/goed.rc
// res/default/actions/goed.sh
// res/default/actions/goed_helper.ank
// res/default/actions/goimports.sh
// res/default/actions/search.ank
// res/default/actions/search_text.sh
// res/default/actions/stats.sh
// res/default/actions/vt100_size.sh
// res/default/bindings.toml
// res/default/config.toml
// res/default/themes/acme.toml
// res/default/themes/default.toml
// res/resources_version.txt
// res/themes/Readme.md
// DO NOT EDIT!

package core

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _resDs_store = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x97\xcf\x6e\xd3\x40\x10\xc6\x67\xd3\xb4\x71\xd2\xcb\x22\xa8\x54\x89\x8b\x8f\x20\x45\x55\x50\x9b\x56\xdc\x42\x28\x48\x1c\x90\xa2\x06\xb5\x42\x14\x05\x3b\x36\x64\x25\xe3\x8d\xec\x75\x02\x8a\x22\xe5\x86\xc4\x13\x70\xe6\xff\x7b\x20\x38\xf5\x01\xe0\x51\x38\xc1\xac\x3d\x2d\xc6\x09\x07\x4e\x8d\x60\x3f\x6b\xf3\x9b\x24\xdf\x8c\x13\x8f\xbd\xf6\x02\x00\x6b\x27\xde\x35\x00\x8e\xa1\x05\x19\xcb\x35\x58\x28\x8b\xc6\x9c\x4a\x39\x03\x4b\x6b\x48\x08\x21\xbe\x13\xc8\xbe\x1b\x2c\xae\x65\x64\x64\xb4\x44\xd2\xd7\x6e\x05\x1c\xe8\x83\x02\x91\xbf\x7e\xa5\x0b\xd9\xb4\x70\x1b\xc7\x95\x1f\xa9\xd2\x8c\x0a\x78\xe0\xc3\x63\xcc\x49\x20\x00\x55\x70\x9f\x14\xdc\xab\xe8\xd4\x55\x55\xb1\x2e\x3b\xd0\x4e\x1c\x6c\xde\xe9\x8e\xe3\x21\x39\xbf\xbb\xc3\x40\xc4\xaa\xd1\xf8\xc6\x4a\x2b\xe5\xd5\xb5\x8a\x55\xad\xad\xeb\x8d\x5f\xa8\x3d\xec\x0e\xe4\xb8\xab\x1c\x95\xc4\x6d\x27\x7a\x90\xbe\x13\x9e\xef\x52\xdc\x71\xd4\xe0\x34\xbe\x27\x65\x70\x16\x3b\xee\xa1\xf0\xc7\x3d\x7e\xe9\xa6\x0c\x95\x23\x42\x3f\xca\xa5\x1e\x1f\x89\xd0\x93\xe3\xb6\x4c\x42\x2f\x3e\xa6\x0f\x8f\x84\xa7\x06\x3d\xbe\xd1\x89\xfc\x11\xa6\x76\x9c\xd0\x3f\x14\xb1\x70\x45\x20\xd4\x73\xab\xaa\xb7\x1e\xdf\x9c\x4c\x9a\xbb\xcd\xba\xbd\x7d\x7d\x67\x5a\xb7\x27\x7b\x7b\x8d\xba\xbd\xb3\xbd\x3b\x9d\xf2\x17\x96\x75\xf9\x6a\xf3\xc6\xdd\xfb\xc3\xe9\xcb\xd7\x6f\xde\xbe\x7b\xff\xe1\xe3\xa7\xcf\xd9\xf1\x67\x8c\x1a\x71\xb1\xd0\x98\x2f\xbf\x1f\x92\x51\x37\x0a\x03\x19\x3e\x81\x74\xaa\x85\x2a\x1c\x60\x13\x1c\x6c\xc5\x53\xe4\x16\xbe\x7a\x85\xc3\xfb\xb5\xd0\x88\x0d\x88\xd0\x19\x63\xbd\x04\xa3\x7e\x1a\xf7\x60\x84\x8c\x30\xca\x5a\xbf\x85\x7b\x7a\x36\xd7\x52\x7d\x02\xbc\xca\x55\x5a\x43\xd7\x00\xf3\xf4\x9e\x8b\x27\xcb\x49\xc1\x6b\xb4\xc4\xa2\x53\xcf\x5a\x3f\xdf\x9f\x61\x64\x64\xb4\x84\xd2\xf3\x83\x4d\x6c\x11\x67\x19\x19\x7d\x5f\x22\x96\x73\x39\x9c\x68\x13\x5b\xc4\x59\x46\x46\xbe\x12\xb1\x4c\xb4\x88\x9c\x68\x13\x5b\xc4\x59\x46\x9a\xb4\x18\x2d\x3e\x18\xed\x99\xd1\x0a\x85\x71\xa2\x4d\x6c\xfd\xe5\x9f\x36\x32\xfa\x4f\xb4\x92\x81\xeb\xfb\xff\xad\x3f\xaf\xff\x8d\x8c\x8c\xfe\x61\xb1\xf2\x7e\x77\xbf\x0d\x67\x0b\x82\x39\xe9\x7b\xad\x8d\xe3\xd1\x69\x02\x2c\x7e\x10\x20\xaf\xbe\x15\x6f\xc2\x2f\xaf\x4d\x6c\x11\x67\x19\xcd\x83\x80\x91\xd1\x79\xe9\x67\x00\x00\x00\xff\xff\xd1\x0c\x4c\xbd\x04\x18\x00\x00")

func resDs_storeBytes() ([]byte, error) {
	return bindataRead(
		_resDs_store,
		"res/.DS_Store",
	)
}

func resDs_store() (*asset, error) {
	bytes, err := resDs_storeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/.DS_Store", size: 6148, mode: os.FileMode(420), modTime: time.Unix(1469570529, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x52\xb1\x6e\x1b\x31\x0c\xdd\xef\x2b\x5e\xb7\x04\x70\xed\x3d\x5b\x51\x67\x08\x50\xc4\x05\x9c\xec\xa6\x25\xea\x2c\x54\x77\x3a\x48\x54\x93\x76\xe8\xb7\x57\x92\x75\x71\xce\x68\x33\x8a\x7c\xef\xf1\xf1\x51\x5f\xfd\x28\x3c\x4a\x84\x37\xf8\xb3\x59\xf7\x9e\x35\xee\x3a\xe0\x33\x94\x1f\x8d\xed\xd7\xe2\x07\x87\x3b\x3c\x47\x0e\xb8\x51\x29\xe6\xb7\xfd\xcd\xfa\xb6\xf5\x53\x20\xb1\x7e\x84\xb1\x8e\x2b\x4d\x4e\x3c\x70\xdc\xfc\x93\x72\xee\xad\xa0\x02\x93\x30\x4c\xf0\x03\xa2\xca\x0a\xea\x04\x1f\xb2\xe2\x64\xf3\xf8\x73\x59\x68\xd4\x14\xf4\xa6\xe9\x55\x6d\x52\x65\xd6\x7f\xc4\x5b\xb3\xab\x48\xcd\x86\x92\x93\x82\xdc\x05\xdb\xdb\x91\x1c\xea\x6e\xc5\x67\x76\xa0\x3d\x46\x2f\x60\x6d\x05\xda\x06\x56\xe2\x7e\x81\x22\x5e\xac\x73\x38\x32\x02\x4f\x8e\x54\xc6\xa7\x29\x2f\x97\xa6\x3e\x90\xe6\xb8\x5e\x68\x2f\x03\xda\x37\xc3\x73\x6e\xd8\x5e\x46\x2c\x79\x97\x84\xe6\x25\x5b\x30\x1f\x70\xde\x6d\xfe\x46\x6a\xb5\x2b\x56\xa5\x1d\x93\x31\x1c\x32\x5c\x9d\xcf\x8b\x40\x2f\x73\x11\x9a\x84\x56\xd8\xee\xf0\xb8\x7b\xc2\xfd\xf6\xe1\x09\x9f\x2a\xc9\x8e\x45\x5a\x71\xa3\x51\x7e\x17\x63\x50\x29\x84\xa2\x51\xf3\x9b\x41\x37\xf1\x16\x5f\xbe\x3f\x20\x7a\xf5\x83\xa5\x24\xd3\xbd\x25\x50\x33\x06\x05\x46\x8a\x99\xf2\xfc\xf8\xed\x7e\xbf\x07\xe1\x72\x2d\xfc\xcc\x46\xca\xb7\xe1\x57\x1b\x25\xae\xba\xe8\x61\xf2\x0f\xe0\x57\x1a\x26\xc7\xb0\x06\x47\x2f\x27\x1c\xe6\xbd\x7b\x6f\x06\xa9\x51\x1f\x90\xa7\xe0\x70\x1d\xcc\x7b\x40\x13\x9d\xd9\x8b\xde\x7c\xe0\xe2\x6c\xdd\xfd\x0d\x00\x00\xff\xff\x4d\x01\x5a\xb0\xfe\x02\x00\x00")

func resReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_resReadmeMd,
		"res/Readme.md",
	)
}

func resReadmeMd() (*asset, error) {
	bytes, err := resReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/Readme.md", size: 766, mode: os.FileMode(420), modTime: time.Unix(1464737891, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resActionsReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x72\x2e\x2d\x2e\xc9\xcf\x55\x48\x4c\x2e\xc9\xcc\xcf\x2b\x56\x48\xcf\x57\xc8\x48\x2d\x4a\xe5\x02\x04\x00\x00\xff\xff\xc4\x35\xc4\xb2\x17\x00\x00\x00")

func resActionsReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_resActionsReadmeMd,
		"res/actions/Readme.md",
	)
}

func resActionsReadmeMd() (*asset, error) {
	bytes, err := resActionsReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/actions/Readme.md", size: 23, mode: os.FileMode(420), modTime: time.Unix(1464737891, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resDefaultActionsFind_filesSh = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x8e\xbd\x8e\x83\x30\x10\x84\xeb\xdb\xa7\x98\x5b\x5c\xdc\x21\x71\x88\x2b\xf3\xf7\x12\x94\x08\x21\x9b\xd8\xd8\x12\x71\x22\xec\x48\xf0\xf6\xc1\xd0\x24\x5b\x8e\x76\xbe\xf9\xb2\xef\x52\x39\x5f\x2a\x19\x2c\x51\x86\x5a\xcb\xa9\xb7\x30\x6e\xd4\x01\x6a\x81\x97\x37\x8d\x87\x8c\x51\x4f\x1e\x3f\xc6\xf9\xeb\x2f\x91\x33\x68\xc0\x22\x63\x14\x63\x44\x85\xf6\x88\x68\xb5\x27\xac\xa7\x7b\x7b\x07\xd7\x8b\x8f\x72\x3e\xc0\xe0\x94\x50\x5d\xc2\x74\xe1\xa9\x42\x9c\x9c\x1f\x2e\x68\x56\xa4\x6d\x79\x6f\xcc\x6e\x85\x90\x71\x44\x29\x3d\xf3\x1f\x7f\x4c\x0c\xef\x13\x5f\xfb\x8b\xf8\xe7\xad\x90\x84\x20\x52\x86\x62\x53\xe5\x5c\x54\x39\xbf\x02\x00\x00\xff\xff\xea\x65\xf8\x2e\xd5\x00\x00\x00")

func resDefaultActionsFind_filesShBytes() ([]byte, error) {
	return bindataRead(
		_resDefaultActionsFind_filesSh,
		"res/default/actions/find_files.sh",
	)
}

func resDefaultActionsFind_filesSh() (*asset, error) {
	bytes, err := resDefaultActionsFind_filesShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/default/actions/find_files.sh", size: 213, mode: os.FileMode(493), modTime: time.Unix(1464737891, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resDefaultActionsGoedRc = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x52\xb1\x6e\xdb\x30\x10\x9d\xcd\xaf\x38\x40\x9c\x82\x24\x4a\x3a\x16\xd0\x10\x34\x42\xe2\xa1\x76\x51\x1b\xf5\xc8\xd2\x22\x59\x1d\xaa\x92\x86\x78\xb6\x6a\x0b\xfa\xf7\x92\x94\x5b\x5b\x5e\x3a\x91\xb8\xf7\xee\xbd\xc7\x3b\x66\xf0\xe6\xb4\x82\xb6\x02\xb4\x48\x8c\xbd\x2d\xcb\x57\x31\x5f\xac\xd6\x2f\x8b\x4f\x65\xc1\x9f\xc7\xc2\xb7\x79\xb9\x29\xf8\x07\xc6\x32\x58\x69\xd9\x56\x35\xfc\x88\x5d\xd5\xde\x93\xfb\x95\x6f\xf7\xd8\x10\x5a\x20\xe7\x1a\x0f\x06\x5b\x4f\xc0\xbe\xbc\xac\xdf\x0b\xfe\xbe\xfc\x5c\xe6\x8f\x91\x9c\xcb\x8a\xd0\x59\x9f\x7f\xbc\x2e\x2a\x6d\xe4\xbe\xa1\x2b\x30\xf6\x31\x66\x6c\x72\x10\x6e\xa7\x2d\xf4\x6c\x96\x41\xba\xc9\xa0\xde\xe8\x10\x35\xa1\x6c\x96\x52\x3c\x3c\xc8\x1d\x8e\x38\x9f\xc4\x87\xef\xfd\xae\x53\x03\x84\x57\x0c\x17\x49\xad\x90\x46\xc9\x74\x9b\x4a\x82\xb4\x0a\x3a\x19\xea\xc6\xb5\x10\x0e\x72\xb0\xd5\xe0\xe5\x21\x60\x39\x54\x8d\xf3\x37\xbe\x49\xe4\x3f\xbe\x95\x1a\x0d\xc3\x89\x36\x28\x4a\x50\xd8\xea\x8a\x5c\x7b\xbc\x4f\x8e\xd6\x11\x9a\xe3\x98\xc0\x19\xa0\x5a\x83\xd5\x5d\x64\xb1\xd9\xdf\xe9\x86\x66\x7e\x37\xb1\x3e\xa0\xee\x84\xd7\x24\x3a\xd7\x8a\x9f\x81\x7c\x9b\x83\xff\x5b\xde\x39\x12\x1b\x80\xb1\xf2\x75\xbe\x5e\x7e\x2d\x2e\xc3\xc8\x60\x53\x87\xe1\x75\x48\xf5\x79\x0c\xf7\xc0\x47\x16\xa0\x1f\x47\x1d\x9f\xe1\xa0\xbf\x2c\x85\xdf\x0d\x30\xd9\x4a\x1e\xd3\x06\x96\x87\xde\xa7\x3f\x22\x48\xff\xa6\x47\x5f\x47\x6a\x04\x0c\xf4\x06\xad\x12\x91\xec\xcf\x75\x48\x1d\x27\xe8\x0f\xf4\xfc\xf4\x24\x3c\x9e\x74\x40\x42\xf9\x4f\x00\x00\x00\xff\xff\xe5\x8f\xe1\x08\x98\x02\x00\x00")

func resDefaultActionsGoedRcBytes() ([]byte, error) {
	return bindataRead(
		_resDefaultActionsGoedRc,
		"res/default/actions/goed.rc",
	)
}

func resDefaultActionsGoedRc() (*asset, error) {
	bytes, err := resDefaultActionsGoedRcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/default/actions/goed.rc", size: 664, mode: os.FileMode(420), modTime: time.Unix(1469139893, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resDefaultActionsGoedSh = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x91\x51\x6f\x82\x30\x14\x85\x9f\xed\xaf\xb8\x29\x3c\x6c\xc9\x14\xdd\xe3\x12\x92\x99\x49\xd4\x87\xe9\x32\xcd\xf6\x58\x2b\x2d\xa3\x19\x6b\x09\xbd\x88\xba\xec\xbf\x8f\x02\x26\xe8\x23\xe7\xde\xef\xdc\xc3\xa9\x07\x73\x23\x05\xec\xb9\x4d\x41\x69\x85\x84\xc8\x63\x6e\x0a\x84\xf9\x3a\x9a\xb1\xe5\x6a\xb3\x9d\xae\x5e\xa2\xd0\x9f\x5c\xe9\x1f\xcb\xe8\x33\xf4\x1f\x09\xf1\x60\x23\x79\x11\xa7\xf0\xe5\x5c\xe2\xd2\xa2\xf9\x09\xf6\xa5\xca\x50\x69\x40\x63\x32\x0b\x89\x2a\x2c\xc2\x05\x7f\x9b\x6e\x17\xa1\xbf\x58\xbf\x46\xc1\xc8\x31\x01\x8f\x51\x19\x6d\x83\xa7\xbe\x28\x64\xc2\xcb\x0c\x7b\x43\xc7\x11\x92\x94\xba\x51\x9a\x73\x2c\x16\x77\xf7\xf0\x4b\x06\x1e\xc4\xa2\x0e\x8f\x06\x38\x08\x55\xc8\x18\x4d\x71\x7a\x00\xae\x05\x68\x83\x2a\x39\xb5\xe9\x4c\x02\x98\x4a\xd0\xb2\x72\x5b\x64\x70\x89\x59\xc3\xfe\x33\x19\x34\x3b\xc3\x21\xcf\x15\x1c\x94\xac\x98\x95\xc8\x2a\x53\x7c\xb3\x7a\x19\xfc\xab\x3a\xba\x4f\xd7\x02\xd0\x5d\x5e\x89\x1d\x25\x7f\xd0\x8b\x67\xda\x60\x3d\x4b\x93\x4b\x7d\xeb\xd2\xa1\xee\xba\xa3\xbb\x86\xa2\xd9\x72\xbb\x7e\x0f\x69\x0f\x96\x42\xe1\x2d\xdc\xb1\x5e\x3b\xe4\x75\xcd\x99\x24\x84\x67\x8a\xdb\xfa\x8f\x5a\xbc\x6e\x88\x5e\x34\x1b\x52\xdb\x3c\x15\x43\x79\xc4\x91\x4d\x69\x37\x48\x42\x9a\x28\x2d\x98\x33\xb0\x3d\xdd\x9e\x43\x7a\xc0\xc9\x78\xcc\xac\x3a\xcb\x66\x40\xfe\x03\x00\x00\xff\xff\xb7\xa2\x5a\x4f\x2e\x02\x00\x00")

func resDefaultActionsGoedShBytes() ([]byte, error) {
	return bindataRead(
		_resDefaultActionsGoedSh,
		"res/default/actions/goed.sh",
	)
}

func resDefaultActionsGoedSh() (*asset, error) {
	bytes, err := resDefaultActionsGoedShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/default/actions/goed.sh", size: 558, mode: os.FileMode(420), modTime: time.Unix(1469139893, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resDefaultActionsGoed_helperAnk = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x90\xc1\x4e\xfb\x30\x0c\xc6\xcf\xcd\x53\xf8\xdf\xff\x25\x95\x50\x81\x07\xd8\x61\xda\xaa\xa9\x97\x21\x31\x04\x07\x84\x50\xd4\xba\x10\xd1\x3a\x95\x93\x0e\x24\xb4\x77\xc7\x69\xc3\xe0\xc8\x2d\xfe\x3e\xfb\x67\x7f\xf9\x0f\x3b\x87\x2d\xbc\x62\x3f\x22\xc3\xe0\xda\xa9\x47\xe8\x1c\x83\xa1\x37\x07\xbe\x61\x3b\x06\x5f\xaa\xa3\x61\xc0\x0f\x6c\x60\x05\x76\x18\x1d\x07\x9d\x3b\x7f\x19\x95\xbc\x50\x2a\x8d\xcd\xa4\x4f\x95\x25\xe6\xd1\xe2\x3b\xd4\x5b\x50\x59\x37\x51\x33\x97\xba\x88\x7e\xc6\x18\x26\x26\x08\xae\xa6\xa0\x9d\x2f\x77\x18\x90\x8e\x3a\xdf\xdd\x54\xdb\xe7\xfb\xba\x7a\xc8\x8b\x42\x65\x27\x95\x9d\x59\x96\x7c\x30\xd4\xa0\xf0\x12\xee\x5b\xf9\x0b\xb2\xde\x1f\xee\xd6\xfb\x4d\xf5\x1b\x7b\x3b\x91\x07\x03\x8d\x1b\x06\x43\xed\x85\xa4\xb3\x41\x5f\x17\x60\x3b\xe8\x8c\xed\x7d\x5a\xc3\x13\x69\xc3\x2f\x7e\xd9\xd2\x0c\xad\xfc\x40\x8c\x5d\x6e\x96\xc1\xd9\x7c\xbc\x7a\x2a\x16\xb7\x5c\x4b\x29\x2d\x51\x15\x65\x64\x4b\xa1\x4f\x84\xd4\x71\x08\xad\x9b\x82\xf4\xc8\x95\xcb\xfb\xc7\x40\xe6\xb3\x21\x6f\x31\x16\x25\xda\x72\xb0\x8e\x0c\x39\x30\x8a\xff\x56\x40\xb6\x9f\xaf\x3a\xaf\x11\x3d\x76\x64\x02\xa8\x96\x38\x52\x9d\x62\xe4\x93\xfa\x0a\x00\x00\xff\xff\x98\x29\x53\x99\xe9\x01\x00\x00")

func resDefaultActionsGoed_helperAnkBytes() ([]byte, error) {
	return bindataRead(
		_resDefaultActionsGoed_helperAnk,
		"res/default/actions/goed_helper.ank",
	)
}

func resDefaultActionsGoed_helperAnk() (*asset, error) {
	bytes, err := resDefaultActionsGoed_helperAnkBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/default/actions/goed_helper.ank", size: 489, mode: os.FileMode(420), modTime: time.Unix(1464737891, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resDefaultActionsGoimportsSh = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x8f\x41\x4b\x33\x31\x10\x86\xef\xf9\x15\xef\x47\xf7\xf8\xad\x0b\xde\x2b\x88\x16\xe9\xa5\x82\x8a\x1e\xdb\x6c\x76\xd2\x0d\x26\x99\x92\x64\x5b\x84\xfe\x78\x27\xb6\xc8\xe2\x71\x26\x4f\xde\xf7\x99\xc5\xbf\xae\x77\xb1\xeb\x75\x1e\x55\xa6\x82\x96\xb0\xb0\xda\x79\x90\x4e\xfe\x4b\xa9\x05\x5e\xa6\x88\x3d\xbb\x70\xe0\x54\x32\x38\x42\xcb\x88\xcc\x53\x32\x04\xeb\x3c\xfd\x17\xc8\x6a\xef\x33\x7a\x6d\x3e\x51\x58\xde\x6d\x28\x70\x76\xf6\x2f\x72\x81\x3e\x4a\xb0\xee\x3d\xdd\x28\x75\x74\x74\x5a\x36\x4f\xcf\xab\xc7\xed\xfb\x7a\xf5\xa1\x5c\xcc\xe5\x3a\xaf\x37\xaf\x6f\xf7\x9b\x87\x55\x2d\xdf\x8b\x52\xed\x80\x67\xa3\x8b\xe3\xa8\x72\x32\xcb\xdd\x9e\x69\x40\xdb\xea\x83\x43\x0d\xda\xca\x72\x2b\x04\x9a\x1a\x83\xa6\xee\x76\xca\x84\x61\xf9\x2b\xa0\x4e\xa3\x33\xe3\x4c\xe8\xf6\x0e\xdd\x40\xc7\x2e\x4e\xde\xe3\x7c\xc6\x85\x16\x6f\x69\x4d\x72\x72\x19\x09\x86\x43\xd0\x71\xa8\x47\xd7\xb1\x8a\xa8\x46\x40\xb4\x27\x34\xd2\x59\x51\xf2\xac\x87\x1f\x0b\xf4\x93\xb5\x94\x60\x13\x87\x0b\xfb\x57\xf3\x0a\xcf\x2c\xa1\xbe\x03\x00\x00\xff\xff\x23\x8f\x45\x09\x81\x01\x00\x00")

func resDefaultActionsGoimportsShBytes() ([]byte, error) {
	return bindataRead(
		_resDefaultActionsGoimportsSh,
		"res/default/actions/goimports.sh",
	)
}

func resDefaultActionsGoimportsSh() (*asset, error) {
	bytes, err := resDefaultActionsGoimportsShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/default/actions/goimports.sh", size: 385, mode: os.FileMode(493), modTime: time.Unix(1469139893, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resDefaultActionsSearchAnk = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x90\xcf\x4a\x03\x31\x10\x87\xcf\xce\x53\x8c\xe9\x25\xc1\xed\x9f\x17\x58\x41\x45\xbc\x8a\x3d\x96\x22\x61\x3b\xdd\x06\xd3\x64\x99\x24\x52\x11\xdf\xdd\x49\x44\xad\x5e\x16\x66\xe6\xfb\x7d\x33\x9b\xd9\xa5\x0d\x2f\x11\x60\x86\xf7\x27\x7b\x9c\x3c\x61\xad\x31\x0d\xec\xa6\xdc\xe1\x50\x98\x29\x64\xff\x86\x25\x94\x44\x3b\x00\x1f\xed\x4e\xab\x31\xd2\xee\xf9\x40\x7e\x22\x5e\x48\x40\x19\x80\x57\xcb\x18\x53\x87\x7b\x6f\xc7\x0e\xe9\x44\x03\xf6\xe8\x8e\x53\xe4\xac\x55\x4c\xca\x74\x3f\x55\x45\xce\xeb\x98\x96\x95\xaf\x96\x19\x3e\x5a\x4e\x72\x05\x8f\x09\x97\x4d\x96\xc0\x8d\x21\x32\xdd\x59\xe9\xf7\xad\xb5\xb8\x8d\xd1\x6b\xe5\x94\xac\xb3\x3e\x51\x87\xea\x97\x11\x4d\x63\x9a\x48\x1b\xb9\x78\xf8\x8e\xdd\x88\x55\x9b\xcd\x6a\x0b\xcd\xdf\xe3\x46\x8d\x4c\x93\x68\xd4\x3c\xb4\xaf\x57\x5b\x70\x7b\x3c\xdf\xd8\x63\xe6\x42\xf8\x0e\x17\x2d\x74\x55\x53\x73\x27\xdc\x47\x25\x3d\x05\x2d\x1b\x0c\x5e\xe3\xea\x1f\xc3\x62\x94\x91\x80\x48\x72\xe4\x9f\xe9\x57\xbf\xfe\xef\x53\x09\x98\xc8\xf2\x70\x80\x07\x79\xd5\x05\x97\xa0\x73\x5c\x67\x76\x61\x5c\x7b\x37\x90\xae\x21\x63\xe0\x33\x00\x00\xff\xff\x7e\x24\xb8\x7b\xab\x01\x00\x00")

func resDefaultActionsSearchAnkBytes() ([]byte, error) {
	return bindataRead(
		_resDefaultActionsSearchAnk,
		"res/default/actions/search.ank",
	)
}

func resDefaultActionsSearchAnk() (*asset, error) {
	bytes, err := resDefaultActionsSearchAnkBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/default/actions/search.ank", size: 427, mode: os.FileMode(493), modTime: time.Unix(1464737891, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resDefaultActionsSearch_textSh = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\x8e\x3d\x8e\x84\x30\x0c\x46\xeb\xf5\x29\xbe\x35\x14\xbb\x45\x16\xb1\xe5\xfc\x5d\x82\x12\x51\x04\x26\x10\x4b\x28\xa0\xc4\x05\x73\xfb\x09\x43\x33\xe3\xca\xb2\xde\x7b\x72\xf1\x5d\xf5\x12\xaa\xde\x26\x4f\x54\xa0\x71\x36\x0e\x1e\xea\x36\xc5\x6a\x55\x5d\x0c\x90\x80\x51\x66\x97\x50\xe1\x2e\x31\xe1\x67\x8a\x6e\xfd\x25\x92\x11\x2d\xb8\x2c\x18\x66\x56\xd4\xe8\xce\x50\xef\x02\x21\x8f\x1b\xfc\x02\x6e\x1e\x41\xed\x76\x42\xc2\x25\xc7\x72\xeb\x86\x36\x2f\xbe\xe3\x03\xda\x24\x7b\x34\x0a\xd1\x7e\xbd\xf2\x1f\x7f\x54\xa7\xf7\xea\xd7\x81\x94\xff\xfc\x12\xf6\x1f\x60\x62\x10\x18\x33\x2c\xf3\x12\xb3\x53\x33\xca\x9d\xc2\x33\x00\x00\xff\xff\xb7\x62\x20\x19\xd5\x00\x00\x00")

func resDefaultActionsSearch_textShBytes() ([]byte, error) {
	return bindataRead(
		_resDefaultActionsSearch_textSh,
		"res/default/actions/search_text.sh",
	)
}

func resDefaultActionsSearch_textSh() (*asset, error) {
	bytes, err := resDefaultActionsSearch_textShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/default/actions/search_text.sh", size: 213, mode: os.FileMode(493), modTime: time.Unix(1464737891, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resDefaultActionsStatsSh = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x52\x56\xd4\x4f\xca\xcc\xd3\x4f\x4a\x2c\xce\xe0\x4a\x4d\xce\xc8\x57\xd0\xd5\x55\x70\x0b\x72\x75\x05\xd2\x5c\x69\x45\xa9\xa9\x70\x41\x17\x37\x90\x50\x4a\x9a\x82\x6e\x85\x42\x49\x6e\x41\x5a\x31\x5c\x26\xc4\x3f\x40\x21\x20\xc8\xdf\x39\x18\xa4\xa0\xa0\x58\x21\xb1\xb4\x42\xa1\x46\xa1\x38\xbf\xa8\x44\x41\xb7\x28\x5b\xc1\x58\xc7\x18\xc8\xcd\x48\x4d\x4c\x51\xd0\xcd\x53\x30\x03\x04\x00\x00\xff\xff\x85\x91\x8c\xbb\x71\x00\x00\x00")

func resDefaultActionsStatsShBytes() ([]byte, error) {
	return bindataRead(
		_resDefaultActionsStatsSh,
		"res/default/actions/stats.sh",
	)
}

func resDefaultActionsStatsSh() (*asset, error) {
	bytes, err := resDefaultActionsStatsShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/default/actions/stats.sh", size: 113, mode: os.FileMode(493), modTime: time.Unix(1464737891, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resDefaultActionsVt100_sizeSh = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x90\xb1\x0e\x82\x30\x10\x86\xf7\x7b\x8a\x13\x3a\x68\x22\xe1\x09\x18\x8c\x12\xc3\x82\x03\x04\x47\x28\x58\xa5\x09\x52\x43\x1b\x08\x3e\xbd\x5c\x25\x24\xca\xd2\xb4\x5f\xbf\xfb\x73\x77\xee\xc6\x2f\x65\xeb\x97\x5c\xd7\xa0\x85\x41\x4f\xa0\x7b\xe7\xb2\x41\xc1\xbb\x66\x04\x70\x31\x99\xa8\x31\x23\x6a\xf9\x16\x68\x14\x3e\xb9\xa9\x6a\x7c\x28\x71\xc3\x5e\x8a\xe1\xcb\xb7\x9a\x94\x4e\x0d\x7a\x8f\xf6\x5a\xa9\x46\xef\x00\xc8\x08\xd8\xf9\x12\x9e\xf2\x2c\x0a\xaf\x20\x5b\x6d\xe6\x77\x14\x27\xe9\x21\x3e\x86\x00\x54\x16\x14\x36\xd1\xf3\xf8\x4b\xda\xdc\x9c\x28\x32\x2a\x40\x46\xa0\x00\xca\x5c\x7b\x44\x7f\x3d\xf8\x57\xa6\xc1\xf2\xde\xac\x4c\x64\x44\x60\x69\x1d\x19\x9d\xb0\xf4\x3f\xff\x83\xa8\x6a\x85\x0e\xed\x21\x4b\x97\x35\x58\x77\x9e\xd8\x7a\xb6\xc4\xf9\x04\x00\x00\xff\xff\xcf\x77\x15\x3b\x50\x01\x00\x00")

func resDefaultActionsVt100_sizeShBytes() ([]byte, error) {
	return bindataRead(
		_resDefaultActionsVt100_sizeSh,
		"res/default/actions/vt100_size.sh",
	)
}

func resDefaultActionsVt100_sizeSh() (*asset, error) {
	bytes, err := resDefaultActionsVt100_sizeShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/default/actions/vt100_size.sh", size: 336, mode: os.FileMode(493), modTime: time.Unix(1469139893, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resDefaultBindingsToml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x94\x39\x6f\xdc\x30\x10\x85\xfb\xfd\x15\xc4\xba\x34\xb2\x82\x81\x20\x08\x02\xa4\xb2\x53\xa4\x70\x15\xa4\x16\x28\x6a\x2c\x29\x4b\x71\x68\x72\xb8\xf2\xa6\xc8\x6f\x8f\x34\x24\x75\xf9\x68\x12\xef\xf7\x9e\x66\xe6\xf1\xba\x11\x8f\xd2\x7a\x71\x86\x6b\x85\xd2\xd5\x45\x8f\xc1\x83\x50\x2d\xba\xda\x0b\x42\xf1\xfb\xa7\x80\x0b\x18\xf2\x87\x1b\xf1\x0b\x40\xb4\x44\xd6\x7f\x2b\x8a\xa6\xa3\x36\x54\x27\x85\x7d\x41\x0a\xb5\x74\x45\x83\x50\x17\x95\xc6\xaa\xe8\xa5\x27\x70\x05\x7f\x17\xff\x2d\xe9\x6a\xe1\xd4\xe0\xe1\x66\x2c\xf3\xa3\xee\x48\x74\x46\xfc\x2b\x4e\xf1\x9b\xce\xd4\x9d\x69\xfc\x89\xb0\xd7\xa3\xfe\x49\x3c\xde\xdf\x09\x4f\xd2\x8c\x23\x3c\xa1\x13\x8f\x3c\xd3\xbd\xee\xd4\x59\x54\x81\x08\x8d\xb8\x8b\xbe\x87\x37\x7c\x0f\x4e\x36\x7b\x5b\xae\xb7\xb6\x61\xa8\xf4\xab\xaa\xc7\xb1\xf5\x51\x7c\x17\x47\x0f\x54\xaa\xe0\x3c\xba\x23\xc3\x2f\x91\x2a\x87\x5a\x97\x35\x0e\x86\xf1\x67\xa6\x68\xc1\x94\x9d\x29\x0d\x0c\xe5\xa5\x83\x81\xa5\xaf\xeb\x0f\x82\x9d\xd8\x43\x2e\xad\x41\x51\xc9\x2b\xcd\xf8\x7e\xc3\x87\x71\xe9\x47\x2c\x35\xdd\x4e\x7d\x4a\xe9\x1c\x0e\x6c\x30\xf2\x92\x5b\x4f\xaa\x86\x27\xda\xa9\x13\x4a\xaa\xeb\x9a\x76\x2f\x33\x4b\x7a\xb0\x3b\x91\x67\xac\xa4\x3a\x7b\x2b\x15\x30\x5e\x7e\x1d\x8e\x8a\x9c\xbe\x95\x8c\x5b\xec\x67\x52\xad\x47\x97\x5a\x67\xae\x98\x2b\xb4\xd7\x4c\x62\x49\x30\x75\x06\x2d\x83\x1e\x2f\x90\xe7\x66\xfc\x67\xc1\x79\x5e\xe6\xe7\x85\xf3\xa8\x0c\xf5\x02\xd3\xca\x30\x36\xef\xed\x0b\xab\xb8\x51\xbd\xec\x61\x23\x3f\xb3\xfc\x1c\xba\xb9\xb5\x63\xe2\x40\xa3\x9c\xa7\xf7\x31\xb8\xbc\xcc\x4b\x41\x4b\xd9\xf1\xf8\xf7\x19\x07\xc6\xf5\xb8\x42\x04\xe5\x7a\xe9\x2e\x2c\xd8\xe9\xb2\x64\x14\x77\x43\x69\xf4\x50\x0e\xe3\xb5\xc0\x79\xa8\x97\xa8\x84\x79\xa6\x6b\x9a\xa9\xc6\x4c\xfe\x32\x09\x86\x49\xec\xb7\x6a\x3d\xb1\xed\x71\x5a\xaf\xda\xb4\x2d\xcb\xf6\x8c\x37\x16\x5c\xfa\x3d\xfd\x35\x12\xaf\xa4\x8d\xe5\x08\x9b\x46\x43\xa9\xfa\xba\xac\xe4\xa4\x71\xa6\xd5\xb9\xd8\x9d\xcb\xf5\x06\x1b\x78\xa1\x94\xba\x99\x7b\x5b\xd7\xa1\x5b\x28\x6f\xae\x03\x0a\xce\x6c\x46\xd8\x1f\xe8\xcd\x09\xf1\x6d\xf7\xf4\xea\xbe\xa4\x53\x99\xda\x44\x4b\x0e\x9a\xb4\x98\x37\x4a\x73\x8e\xa4\xa5\x38\x51\xdc\x85\x4a\x96\x14\x2b\x5a\xe6\x70\x49\x5c\x67\x8c\x8e\x25\xe9\xda\xc2\x81\xa3\x61\x9f\x31\xd9\xb6\x29\x37\x37\x37\x39\x62\x8d\x60\xc1\x7d\xf0\x68\x44\xfd\xfd\x67\x23\xea\x1f\x3d\x1c\xd1\xf1\xf6\xd3\x41\x32\xbe\x05\xd3\xff\x87\xe3\xc6\x33\x5f\xda\xc3\xff\x00\x00\x00\xff\xff\x60\x12\x3b\x81\x6f\x06\x00\x00")

func resDefaultBindingsTomlBytes() ([]byte, error) {
	return bindataRead(
		_resDefaultBindingsToml,
		"res/default/bindings.toml",
	)
}

func resDefaultBindingsToml() (*asset, error) {
	bytes, err := resDefaultBindingsTomlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/default/bindings.toml", size: 1647, mode: os.FileMode(420), modTime: time.Unix(1469139893, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resDefaultConfigToml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x34\x4e\x4d\x6b\xc3\x30\x0c\xbd\xfb\x57\x88\xf4\x3e\x32\x06\x63\x3b\xf8\xb2\x95\x6e\x83\x15\x06\x09\xdb\xd9\xc4\x72\x2c\x88\xe5\x90\xc8\x6b\xb7\x5f\x5f\xb9\x25\x07\x21\xbd\x0f\xf4\xde\x0e\xf6\x18\x5c\x99\x04\x86\xcc\x81\x46\xd3\xfd\xb1\xb8\xf3\x3b\x8d\x71\xd2\x11\xe2\xd1\xca\x52\xd0\xf4\x11\x13\xda\xc6\xdf\xdc\x77\x92\xd3\xd4\x98\xa3\x3b\xbf\x26\xff\x52\x42\xc0\xe5\x93\x18\x57\xfb\xd0\xb6\xad\xd9\x41\x87\x02\x12\x11\x66\x27\x11\x24\x83\x83\x94\x39\xaf\xb3\x1b\x10\xfa\xfe\x00\x21\xb3\x54\xbe\xac\xa8\xda\x50\x56\xfd\x77\x25\xcd\x5b\xa1\x83\x6e\xdb\x34\xdb\xd9\xd1\x3f\xda\xfb\x76\x83\xfb\x99\xec\xf3\xa3\x66\x7c\x2d\x58\x73\xd1\x43\x22\xa6\x54\x12\xfc\x12\x9e\xe0\x44\x5e\xa2\x39\x12\x7f\x2b\xfa\xa9\xc0\x3e\xd5\x4a\x98\x27\x50\xdf\xe0\x24\x2f\xa6\x96\xbd\x6a\x1f\xec\x6f\x94\x9a\x2e\x01\x00\x00\xff\xff\x23\x64\x52\x8d\x0c\x01\x00\x00")

func resDefaultConfigTomlBytes() ([]byte, error) {
	return bindataRead(
		_resDefaultConfigToml,
		"res/default/config.toml",
	)
}

func resDefaultConfigToml() (*asset, error) {
	bytes, err := resDefaultConfigTomlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/default/config.toml", size: 268, mode: os.FileMode(420), modTime: time.Unix(1471362659, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resDefaultThemesAcmeToml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x92\xbd\x6e\xc2\x30\x10\xc7\xf7\x3e\x05\xca\x9c\xc1\x81\x7c\x90\x21\x0b\x4e\xb2\x54\x55\x87\xd0\xee\x01\x2c\x1a\x29\xc1\xc8\x18\x51\xa4\x0e\xdd\x90\xba\xf5\x7b\xa1\x43\x55\xa9\xea\x73\xf1\x24\x3d\xc7\xb9\x24\x94\xa8\xb0\x38\xff\xfb\xdd\xcf\x17\x3b\xa3\x79\x60\x44\x2e\x29\x7f\xc6\x59\xac\x9e\x86\xf8\x34\x9a\x27\x2c\x67\x53\x19\x18\x23\x9f\x0c\x90\xc0\xac\xcd\xd1\xb5\x58\x71\x71\xcc\x61\xd6\x70\x94\x17\x05\x5b\x40\x6b\xec\x11\x8f\xc4\x2a\x4a\xa4\xc8\x16\xb0\xa9\xed\x13\x57\x27\xe7\x6c\xbb\xe1\x62\x66\x05\x46\xdf\x02\x59\x4c\xac\x3a\xeb\x07\x86\x1b\xff\xc9\x06\x90\xf9\x98\x25\x6c\x99\x8a\x54\x72\x01\xdd\x36\x21\x4e\xb5\x07\xa6\xd0\xef\x3b\x27\x29\x18\xa2\x7e\x9d\x6e\x8b\x09\xcf\xa1\x9d\x52\x62\x57\xd2\x32\x82\xde\x61\x78\x1c\x41\x63\x68\xd5\x91\x4c\xe5\x7a\x35\x49\x45\x2f\xe8\x19\x87\x8f\x07\x93\x0e\xf4\x51\xd4\x8b\x16\x33\x66\xb7\x52\x71\xcd\xd1\x1c\x95\x22\x51\x5a\x88\x05\x7f\xa2\xe4\xb4\x98\xb5\xcc\x6e\x54\x99\x7b\xb8\x42\xe2\xd4\xdb\xe4\x97\x8b\x56\x05\x9c\xd7\x19\xdb\xa0\xf4\xfe\xb9\x6b\xdc\x8a\x38\x95\xc6\x59\xce\x68\xce\xd2\xd2\x78\xd8\xbf\x98\x58\x32\xfd\xe6\xfe\x81\x09\x33\x21\xb7\x9a\x79\x37\xa9\xad\x77\x6e\x31\xc9\x54\xf0\x3c\xc7\x21\xde\x1e\x4d\xd7\x86\x7b\x50\x1e\x5c\x20\x33\x4e\x27\x9a\x79\x32\xf1\x63\x55\x0b\x4f\x33\x17\x5c\x30\x35\x65\x92\xcd\x98\x7e\x9f\x6f\x33\x76\x74\xb5\x03\xbb\x5a\x96\xd0\xee\xf3\x3f\x28\xe4\x1b\xfd\x7a\xbb\xaf\x2e\x0c\x06\xa2\x37\xd5\xe0\xbb\x9f\x4e\x51\x2a\xe6\x59\xa9\xb8\xeb\x2a\xd3\x9c\xaf\xf4\xb0\xfb\xd7\xe6\xfc\x1c\x0f\xcf\xe6\x37\x00\x00\xff\xff\xd8\xe8\x2f\xf0\x98\x03\x00\x00")

func resDefaultThemesAcmeTomlBytes() ([]byte, error) {
	return bindataRead(
		_resDefaultThemesAcmeToml,
		"res/default/themes/acme.toml",
	)
}

func resDefaultThemesAcmeToml() (*asset, error) {
	bytes, err := resDefaultThemesAcmeTomlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/default/themes/acme.toml", size: 920, mode: os.FileMode(420), modTime: time.Unix(1464737891, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resDefaultThemesDefaultToml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\x92\xbb\xee\xda\x30\x14\xc6\xf7\x3e\xc5\x5f\x99\x3d\xd8\x49\x08\x64\xc8\x40\x7c\x59\xaa\xaa\x43\x68\xf7\x00\x16\x8d\x94\x60\x64\x82\x28\x52\x87\x6e\x48\xdd\x7a\x5f\xe8\x50\x55\xaa\xfa\x5c\x3c\x49\x8f\x6f\x81\x52\x44\xa6\xf8\x3b\xbf\xef\x3b\xc7\x47\x2e\x57\x45\xc4\xa7\xd8\x7e\xd1\x33\x01\x27\x26\x70\x82\x85\x39\x95\xab\x4a\xb6\x72\xd1\x5f\x6b\x62\xd0\xbc\x8b\x18\x8e\xee\xf4\x56\xe9\x22\x8a\x09\xce\x02\x17\xb4\x0b\x47\x55\xd7\xc9\x35\x58\xc5\x18\x8f\x1d\x56\xf5\xba\x59\x43\xd3\x34\x0f\xc6\xe7\xf2\xb0\x57\x7a\x49\x6c\x98\x69\x4a\x06\x2d\x2e\xa2\x4c\xdc\x68\x09\x68\x79\xd0\x2a\xb9\xa9\x75\xdd\x2b\x0d\xee\x14\xe3\x91\xef\x11\x54\xf0\xe7\xa3\xff\x54\x48\xe0\xf1\xa0\x1e\xba\xb9\x6a\xc1\x4e\x29\x4e\x7d\xa8\x95\xc0\x3b\x61\xff\x4a\x60\x64\x64\x90\xfa\xba\xdf\x6d\xe7\xb5\x7e\x2a\x9e\xa2\xf3\x8f\x0f\x88\x97\x70\x47\xf8\xcc\x8f\xdf\xee\xc0\xcc\xe4\xdb\xde\x70\x25\xcb\xb2\x3b\x25\xae\x6d\x0a\x26\x74\xe4\x17\xd7\x2d\x1f\x27\x3b\xe0\x12\x0b\x0b\xb9\xd1\x5f\xae\x6d\x45\xd8\x86\x10\xf9\xba\x91\xfb\x90\xf9\xfe\x33\xe2\x2c\x64\xb2\x90\xe9\x89\x10\xca\xc7\x38\xf6\x8f\xa4\x69\x25\x6d\x65\x6d\x13\xcf\xa7\x2f\x88\x50\x57\x42\x3c\x1f\x1e\x12\x30\xac\xd1\xfd\xc1\x31\xdf\x11\x3c\x02\x62\x3a\x5f\x31\xd5\x42\xab\xb6\x0d\x43\x7c\xfb\x88\x60\x36\xbb\x0e\xe4\xb6\x72\x61\x66\xf5\xdc\x31\x9f\x50\x96\x06\x26\x0d\xcc\x0b\xa5\xa5\x99\xb2\x6a\x96\xd2\xdd\xe7\x37\x22\x02\xa7\x6e\xa4\xe9\x2d\xf6\x6a\x63\xa1\xe3\xcf\x47\x10\x53\x7b\x77\xbd\xe3\xaf\x7b\x18\x0c\x44\xdf\xf8\xc1\x8f\x7f\x10\x17\xae\x60\x88\x89\x0f\xaa\xf5\xaa\xb1\x11\xef\xee\x95\x69\xab\xb6\x6e\xd8\xd3\x57\x94\x24\xfe\x4e\x9c\x86\xfa\xdf\x00\x00\x00\xff\xff\x58\x21\xa3\x13\x97\x03\x00\x00")

func resDefaultThemesDefaultTomlBytes() ([]byte, error) {
	return bindataRead(
		_resDefaultThemesDefaultToml,
		"res/default/themes/default.toml",
	)
}

func resDefaultThemesDefaultToml() (*asset, error) {
	bytes, err := resDefaultThemesDefaultTomlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/default/themes/default.toml", size: 919, mode: os.FileMode(420), modTime: time.Unix(1464737891, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resResources_versionTxt = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x32\x34\x31\x07\x22\x53\x53\x73\x73\x2e\x40\x00\x00\x00\xff\xff\x84\xca\xdd\x5a\x0b\x00\x00\x00")

func resResources_versionTxtBytes() ([]byte, error) {
	return bindataRead(
		_resResources_versionTxt,
		"res/resources_version.txt",
	)
}

func resResources_versionTxt() (*asset, error) {
	bytes, err := resResources_versionTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/resources_version.txt", size: 11, mode: os.FileMode(420), modTime: time.Unix(1471475577, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resThemesReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x72\x2e\x2d\x2e\xc9\xcf\x55\x28\xc9\x48\xcd\x4d\x2d\x56\x48\xcf\x57\xc8\x48\x2d\x4a\xe5\x02\x04\x00\x00\xff\xff\x26\x56\x89\xea\x16\x00\x00\x00")

func resThemesReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_resThemesReadmeMd,
		"res/themes/Readme.md",
	)
}

func resThemesReadmeMd() (*asset, error) {
	bytes, err := resThemesReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "res/themes/Readme.md", size: 22, mode: os.FileMode(420), modTime: time.Unix(1464737891, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"res/.DS_Store": resDs_store,
	"res/Readme.md": resReadmeMd,
	"res/actions/Readme.md": resActionsReadmeMd,
	"res/default/actions/find_files.sh": resDefaultActionsFind_filesSh,
	"res/default/actions/goed.rc": resDefaultActionsGoedRc,
	"res/default/actions/goed.sh": resDefaultActionsGoedSh,
	"res/default/actions/goed_helper.ank": resDefaultActionsGoed_helperAnk,
	"res/default/actions/goimports.sh": resDefaultActionsGoimportsSh,
	"res/default/actions/search.ank": resDefaultActionsSearchAnk,
	"res/default/actions/search_text.sh": resDefaultActionsSearch_textSh,
	"res/default/actions/stats.sh": resDefaultActionsStatsSh,
	"res/default/actions/vt100_size.sh": resDefaultActionsVt100_sizeSh,
	"res/default/bindings.toml": resDefaultBindingsToml,
	"res/default/config.toml": resDefaultConfigToml,
	"res/default/themes/acme.toml": resDefaultThemesAcmeToml,
	"res/default/themes/default.toml": resDefaultThemesDefaultToml,
	"res/resources_version.txt": resResources_versionTxt,
	"res/themes/Readme.md": resThemesReadmeMd,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"res": &bintree{nil, map[string]*bintree{
		".DS_Store": &bintree{resDs_store, map[string]*bintree{}},
		"Readme.md": &bintree{resReadmeMd, map[string]*bintree{}},
		"actions": &bintree{nil, map[string]*bintree{
			"Readme.md": &bintree{resActionsReadmeMd, map[string]*bintree{}},
		}},
		"default": &bintree{nil, map[string]*bintree{
			"actions": &bintree{nil, map[string]*bintree{
				"find_files.sh": &bintree{resDefaultActionsFind_filesSh, map[string]*bintree{}},
				"goed.rc": &bintree{resDefaultActionsGoedRc, map[string]*bintree{}},
				"goed.sh": &bintree{resDefaultActionsGoedSh, map[string]*bintree{}},
				"goed_helper.ank": &bintree{resDefaultActionsGoed_helperAnk, map[string]*bintree{}},
				"goimports.sh": &bintree{resDefaultActionsGoimportsSh, map[string]*bintree{}},
				"search.ank": &bintree{resDefaultActionsSearchAnk, map[string]*bintree{}},
				"search_text.sh": &bintree{resDefaultActionsSearch_textSh, map[string]*bintree{}},
				"stats.sh": &bintree{resDefaultActionsStatsSh, map[string]*bintree{}},
				"vt100_size.sh": &bintree{resDefaultActionsVt100_sizeSh, map[string]*bintree{}},
			}},
			"bindings.toml": &bintree{resDefaultBindingsToml, map[string]*bintree{}},
			"config.toml": &bintree{resDefaultConfigToml, map[string]*bintree{}},
			"themes": &bintree{nil, map[string]*bintree{
				"acme.toml": &bintree{resDefaultThemesAcmeToml, map[string]*bintree{}},
				"default.toml": &bintree{resDefaultThemesDefaultToml, map[string]*bintree{}},
			}},
		}},
		"resources_version.txt": &bintree{resResources_versionTxt, map[string]*bintree{}},
		"themes": &bintree{nil, map[string]*bintree{
			"Readme.md": &bintree{resThemesReadmeMd, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

